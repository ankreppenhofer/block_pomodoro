{"version":3,"file":"pomodoro_timer.min.js","sources":["../src/pomodoro_timer.js"],"sourcesContent":["/**\n * Pomodoro Timer.\n *\n * @module     block_pomodoro/pomodoro_timer\n * @copyright  2025 Alissa Cenga <alissa.cenga@tuwien.ac.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nexport const init = () => {\n    let pomodoro = document.getElementById(\"pomodoro-timer\");\n    let currentTimer = pomodoro;\n\n\n\n    function hideAll() {\n        let timers = document.querySelectorAll(\".timer-display\");\n        timers.forEach((timer) => (timer.style.display = \"none\"));\n    }\n\n    let myInterval = null;\n\n    function startTimer(timerdisplay) {\n        console.log('entered here');\n        if (myInterval) {\n            clearInterval(myInterval);\n        }\n\n        const timerDuration = timerdisplay\n            .getAttribute(\"data-duration\")\n            .split(\":\")[0];\n        console.log(timerDuration);\n\n        let durationinmiliseconds = timerDuration * 60 * 1000;\n        let endTimestamp = Date.now() + durationinmiliseconds;\n\n        myInterval = setInterval(function () {\n            const timeRemaining = new Date(endTimestamp - Date.now());\n\n            if (timeRemaining <= 0) {\n                clearInterval(myInterval);\n                timerdisplay.textContent = \"00:00\";\n                const alarm = new Audio(\n                    \"https://www.freespecialeffects.co.uk/soundfx/scifi/electronic.wav\"\n                );\n                alarm.play();\n            } else {\n                const minutes = Math.floor(timeRemaining / 60000);\n                const seconds = ((timeRemaining % 60000) / 1000).toFixed(0);\n                const formattedTime = `${minutes}:${seconds\n                    .toString()\n                    .padStart(2, \"0\")}`;\n                console.log(formattedTime);\n                timerdisplay.textContent = formattedTime;\n            }\n        }, 1000);\n    }\n\n    document.getElementById(\"start\").addEventListener(\"click\", function () {\n        startTimer(currentTimer);\n    });\n\n    document.getElementById(\"stop\").addEventListener(\"click\", function () {\n        if (currentTimer) {\n            clearInterval(myInterval);\n        }\n    });\n}"],"names":["_exports","init","currentTimer","document","getElementById","myInterval","addEventListener","timerdisplay","console","log","clearInterval","timerDuration","getAttribute","split","durationinmiliseconds","endTimestamp","Date","now","setInterval","timeRemaining","textContent","Audio","play","formattedTime","Math","floor","toFixed","toString","padStart","startTimer"],"mappings":"mJAiECA,SAAAC,KA1DmBA,KAChB,IACIC,aADWC,SAASC,eAAe,kBAUvC,IAAIC,WAAa,KAsCjBF,SAASC,eAAe,SAASE,iBAAiB,QAAS,YApC3D,SAAoBC,cAChBC,QAAQC,IAAI,gBACRJ,YACAK,cAAcL,YAGlB,MAAMM,cAAgBJ,aACjBK,aAAa,iBACbC,MAAM,KAAK,GAChBL,QAAQC,IAAIE,eAEZ,IAAIG,sBAAwC,GAAhBH,cAAqB,IAC7CI,aAAeC,KAAKC,MAAQH,sBAEhCT,WAAaa,YAAY,WACrB,MAAMC,cAAgB,IAAIH,KAAKD,aAAeC,KAAKC,OAEnD,GAAIE,eAAiB,EACjBT,cAAcL,YACdE,aAAaa,YAAc,QACb,IAAIC,MACd,qEAEEC,WACH,CACH,MAEMC,cAAgB,GAFNC,KAAKC,MAAMN,cAAgB,SACzBA,cAAgB,IAAS,KAAMO,QAAQ,GAEpDC,WACAC,SAAS,EAAG,OACjBpB,QAAQC,IAAIc,eACZhB,aAAaa,YAAcG,aAC/B,CACH,EAAE,IACP,CAGIM,CAAW3B,aACf,GAEAC,SAASC,eAAe,QAAQE,iBAAiB,QAAS,WAClDJ,cACAQ,cAAcL,WAEtB,GACH"}