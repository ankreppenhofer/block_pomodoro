{"version":3,"file":"pomodoro_timer.min.js","sources":["../src/pomodoro_timer.js"],"sourcesContent":["/**\n * Pomodoro Timer (AMD) â€” scoped by course, increments only when focus ends.\n * WS: block_pomodoro_increment_session(courseid:int, startts:int [UNIX seconds])\n *     block_pomodoro_get_status(courseid:int)\n */\ndefine(['core/ajax', 'core/notification'], function(Ajax, Notification) {\n    'use strict';\n\n    const $ = (id) => document.getElementById(id);\n    const now = () => Date.now();\n    const readInt = (v, d) => {\n        const n = parseInt(v ?? '', 10);\n        return Number.isFinite(n) ? n : d;\n    };\n    const fmt = (ms) => {\n        const s = Math.max(0, Math.floor(ms / 1000));\n        const m = Math.floor(s / 60).toString().padStart(2, '0');\n        const r = (s % 60).toString().padStart(2, '0');\n        return `${m}:${r}`;\n    };\n\n    const scoped = (courseid) => {\n        const cid = Number.isFinite(courseid) && courseid > 0 ? courseid : 'global';\n        const p = `pomodoro:${cid}`;\n        return {\n            END: `${p}:endTimestamp`, RUNNING: `${p}:running`, PHASE: `${p}:phase`,\n            BREAKKIND: `${p}:breakKind`, MSG: `${p}:msg`, CHANNEL: `${p}:channel`,\n        };\n    };\n\n    const renderTomatoes = (el, sessionscount, interval) => {\n        if (!el) {\n            return;\n        }\n        const n = Math.max(0, Number(sessionscount) || 0);\n        const m = Math.max(1, Number(interval) || 0);\n        const filled = ((n % m) === 0 && n !== 0) ? m : (n % m); // Show full row on the long-break step\n        el.innerHTML = Array.from({length: m}, (_, i) =>\n            `<span class=\"tomato ${i < filled ? 'filled' : ''}\" aria-hidden=\"true\"></span>`\n        ).join('');\n    };\n\n    return {\n        init() {\n            const display = $('pomodoro-timer-display');\n            if (!display) {\n                return;\n            }\n\n            const courseid = readInt(display.getAttribute('data-courseid'), 0);\n            const K = scoped(courseid);\n\n            const wellnessSec = readInt(display.getAttribute('data-wellness-sec'), 30);\n            let focusMs;\n            const focusSec = readInt(display.getAttribute('data-focus-sec'), NaN);\n            if (Number.isFinite(focusSec)) {\n                focusMs = focusSec * 1000;\n            } else {\n                let focusMin = readInt(display.getAttribute('data-focus-min'), NaN);\n                if (!Number.isFinite(focusMin)) {\n                    const dur = display.getAttribute('data-duration') || '25:00';\n                    const [mm = '25'] = dur.split(':');\n                    focusMin = readInt(mm, 25);\n                }\n                focusMs = focusMin * 60 * 1000;\n            }\n            let shortbreakMs,\n                longbreakMs;\n            const sbSec = readInt(display.getAttribute('data-shortbreak-sec'), NaN);\n            const lbSec = readInt(display.getAttribute('data-longbreak-sec'), NaN);\n            if (Number.isFinite(sbSec)) {\n                shortbreakMs = sbSec * 1000;\n            }\n            if (Number.isFinite(lbSec)) {\n                longbreakMs = lbSec * 1000;\n            }\n            if (!Number.isFinite(shortbreakMs)) {\n                shortbreakMs = readInt(display.getAttribute('data-shortbreak-min'), 5) * 60 * 1000;\n            }\n            if (!Number.isFinite(longbreakMs)) {\n                longbreakMs = readInt(display.getAttribute('data-longbreak-min'), 15) * 60 * 1000;\n            }\n\n            const longbreakInterval = readInt(display.getAttribute('data-longbreak-interval'), 3);\n            const cfg = {courseid, wellnessSec, focusMs, shortbreakMs, longbreakMs, longbreakInterval};\n\n            // UI: show interval number\n            const intervalEl = $('pomodoro-interval');\n            if (intervalEl) {\n                intervalEl.textContent = String(longbreakInterval);\n            }\n\n            let intervalId = null;\n            let channel = null;\n\n            const sendMessage = (msg) => {\n                if (channel) {\n                    channel.postMessage(msg);\n                } else {\n                    localStorage.setItem(K.MSG, JSON.stringify({...msg, t: now()}));\n                    setTimeout(() => localStorage.removeItem(K.MSG), 50);\n                }\n            };\n            const clearTick = () => {\n                if (intervalId) {\n                    clearInterval(intervalId);\n                    intervalId = null;\n                }\n            };\n            const alarm = () => {\n                try {\n                    const a = new Audio('https://www.freespecialeffects.co.uk/soundfx/scifi/electronic.wav');\n                    a.play().catch(() => {});\n                } catch (err) {}\n            };\n            const setPhase = (p, k) => {\n                localStorage.setItem(K.PHASE, p);\n                if (k) {\n                    localStorage.setItem(K.BREAKKIND, k);\n                } else {\n                    localStorage.removeItem(K.BREAKKIND);\n                }\n            };\n            const getPhase = () => localStorage.getItem(K.PHASE) || '';\n            const ajax = (name, args) => Ajax.call([{methodname: name, args}])[0].catch(Notification.exception);\n            const nextIsLongBreak = (c, i) => i > 0 && c > 0 && (c % i) === 0;\n\n            const startLocalTimer = (endTs, el, onDone) => {\n                if (!el || !Number.isFinite(endTs)) {\n                    return;\n                }\n                if (endTs <= now()) {\n                    localStorage.removeItem(K.END);\n                    localStorage.setItem(K.RUNNING, '0');\n                    return;\n                }\n                clearTick();\n                const tick = () => {\n                    const left = endTs - now();\n                    if (left <= 0) {\n                        clearTick();\n                        el.textContent = '00:00';\n                        localStorage.removeItem(K.END);\n                        localStorage.setItem(K.RUNNING, '0');\n                        sendMessage({type: 'stopped'});\n                        if (onDone) {\n                            onDone();\n                        }\n                        return;\n                    }\n                    el.textContent = fmt(left);\n                };\n                tick();\n                intervalId = setInterval(tick, 1000);\n            };\n            const stopAndReset = (el, play = false) => {\n                clearTick();\n                localStorage.removeItem(K.END);\n                localStorage.setItem(K.RUNNING, '0');\n                sendMessage({type: 'stopped'});\n                if (el) {\n                    el.textContent = '00:00';\n                }\n                if (play) {\n                    alarm();\n                }\n            };\n            const handleMessage = (msg, el) => {\n                if (!msg) {\n                    return;\n                }\n                if (msg.type === 'start' && msg.end) {\n                    startLocalTimer(Number(msg.end), el);\n                    localStorage.setItem(K.END, String(msg.end));\n                    localStorage.setItem(K.RUNNING, '1');\n                    return;\n                }\n                if (msg.type === 'stop' || msg.type === 'stopped') {\n                    if (localStorage.getItem(K.END)) {\n                        stopAndReset(el, false);\n                    }\n                }\n            };\n\n            const openDlg = (d) => {\n                if (d && typeof d.showModal === 'function') {\n                    d.showModal();\n                }\n            };\n            const closeDlg = (d) => {\n                if (d && d.open) {\n                    d.close();\n                }\n            };\n\n            const startWellness = (onAfter) => {\n                setPhase('wellness');\n                const dlg = $('wellness-modal');\n                const cd = $('wellness-countdown');\n                if (!dlg || !cd) {\n                    onAfter();\n                    return;\n                }\n                const end = now() + cfg.wellnessSec * 1000;\n                openDlg(dlg);\n                startLocalTimer(end, cd, () => {\n                    closeDlg(dlg);\n                    onAfter();\n                });\n                const skip = $('skip-wellness');\n                if (skip) {\n                    skip.type = 'button';\n                    skip.onclick = (e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        closeDlg(dlg);\n                        onAfter();\n                    };\n                }\n            };\n\n            const startBreak = (el, ms, kind) => {\n                setPhase('break', kind);\n                const dlg = $('break-modal');\n                const cd = $('break-countdown');\n                if (cd) {\n                    cd.textContent = fmt(ms);\n                }\n                openDlg(dlg);\n                const end = now() + ms;\n                startLocalTimer(end, cd || el, () => {\n                    alarm();\n                    closeDlg(dlg);\n                    stopAndReset(el, false);\n                });\n                const ok = $('dismiss-break');\n                if (ok) {\n                    ok.type = 'button';\n                    ok.onclick = (e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        closeDlg(dlg);\n                    };\n                }\n            };\n\n            const startFocus = (el, ms) => {\n                const focusDur = Number.isFinite(ms) && ms > 0 ? ms : 25 * 60 * 1000;\n                setPhase('focus');\n                const starttsSec = Math.floor(now() / 1000);\n                const end = now() + focusDur;\n                localStorage.setItem(K.END, String(end));\n                localStorage.setItem(K.RUNNING, '1');\n                sendMessage({type: 'start', end});\n                startLocalTimer(end, el, () => {\n                    ajax('block_pomodoro_increment_session', {courseid: cfg.courseid, startts: starttsSec})\n                        .then((res) => {\n                            alarm();\n                            const count = res && typeof res.sessionscount === 'number' ? res.sessionscount : 1;\n                            renderTomatoes($('pomodoro-tomatoes'), count, cfg.longbreakInterval);\n                            const isLong = nextIsLongBreak(count, cfg.longbreakInterval);\n                            startBreak(el, isLong ? cfg.longbreakMs : cfg.shortbreakMs, isLong ? 'long' : 'short');\n                            return null;\n                        })\n                        .catch(Notification.exception);\n                });\n            };\n\n            // Broadcast channel\n            if (typeof BroadcastChannel !== 'undefined') {\n                channel = new BroadcastChannel(K.CHANNEL);\n                channel.onmessage = (e) => handleMessage(e.data, display);\n            }\n\n            // Initial tomatoes from server\n            ajax('block_pomodoro_get_status', {courseid: cfg.courseid})\n                .then((res) => {\n                    const count = res && typeof res.sessionscount === 'number' ? res.sessionscount : 0;\n                    renderTomatoes($('pomodoro-tomatoes'), count, cfg.longbreakInterval);\n                    return null;\n                })\n                .catch(Notification.exception);\n\n            // Resume (only if future)\n            const existingRaw = localStorage.getItem(K.END);\n            if (existingRaw !== null) {\n                const existing = Number(existingRaw);\n                const phase = getPhase();\n                let target;\n                if (phase === 'wellness') {\n                    target = $('wellness-countdown');\n                } else if (phase === 'break') {\n                    target = $('break-countdown');\n                } else {\n                    target = display;\n                }\n                if (Number.isFinite(existing) && existing > now() + 250) {\n                    if (phase === 'break') {\n                        openDlg($('break-modal'));\n                    }\n                    if (phase === 'wellness') {\n                        openDlg($('wellness-modal'));\n                    }\n                    startLocalTimer(existing, target || display);\n                } else {\n                    localStorage.removeItem(K.END);\n                    localStorage.setItem(K.RUNNING, '0');\n                }\n            }\n\n            // Storage sync for this course key\n            window.addEventListener('storage', (e) => {\n                if (e.key === K.END) {\n                    if (e.newValue !== null) {\n                        const val = Number(e.newValue);\n                        if (Number.isFinite(val) && val > now() + 250) {\n                            startLocalTimer(val, display);\n                        } else {\n                            localStorage.removeItem(K.END);\n                            localStorage.setItem(K.RUNNING, '0');\n                        }\n                    } else {\n                        localStorage.setItem(K.RUNNING, '0');\n                    }\n                    return;\n                }\n                if (e.key === K.MSG && e.newValue) {\n                    try {\n                        handleMessage(JSON.parse(e.newValue), display);\n                    } catch (err) {}\n                }\n            });\n\n            const startBtn = $('start');\n            if (startBtn) {\n                startBtn.type = 'button';\n                startBtn.onclick = (e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    startWellness(() => startFocus(display, cfg.focusMs));\n                };\n            }\n            const stopBtn = $('stop');\n            if (stopBtn) {\n                stopBtn.type = 'button';\n                stopBtn.onclick = (e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    stopAndReset(display, false);\n                };\n            }\n\n            window.addEventListener('beforeunload', () => {\n                if (channel) {\n                    channel.close();\n                }\n            });\n        }\n    };\n});\n"],"names":["define","Ajax","Notification","$","id","document","getElementById","now","Date","readInt","v","d","n","parseInt","Number","isFinite","fmt","ms","s","Math","max","floor","m","toString","padStart","r","renderTomatoes","el","sessionscount","interval","filled","innerHTML","Array","from","length","_","i","join","init","display","courseid","getAttribute","K","cid","p","END","RUNNING","PHASE","BREAKKIND","MSG","CHANNEL","scoped","wellnessSec","focusMs","focusSec","NaN","focusMin","dur","mm","split","shortbreakMs","longbreakMs","sbSec","lbSec","longbreakInterval","cfg","intervalEl","textContent","String","intervalId","channel","sendMessage","msg","postMessage","localStorage","setItem","JSON","stringify","t","setTimeout","removeItem","clearTick","clearInterval","alarm","Audio","play","catch","err","setPhase","k","ajax","name","args","call","methodname","exception","startLocalTimer","endTs","onDone","tick","left","type","setInterval","stopAndReset","handleMessage","end","getItem","openDlg","showModal","closeDlg","open","close","startFocus","focusDur","starttsSec","startts","then","res","count","isLong","c","kind","dlg","cd","ok","onclick","e","preventDefault","stopPropagation","startBreak","BroadcastChannel","onmessage","data","existingRaw","existing","phase","target","window","addEventListener","key","newValue","parse","val","startBtn","onAfter","skip","startWellness","stopBtn"],"mappings":"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"}