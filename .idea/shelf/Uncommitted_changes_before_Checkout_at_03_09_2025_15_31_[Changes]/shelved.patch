Index: amd/build/pomodoro_timer.min.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>define(\"block_pomodoro/pomodoro_timer\",[\"core/ajax\",\"core/notification\"],function(Ajax,Notification){let cfg=null,K=null,channel=null,intervalId=null,state=\"stopped\";function clearTick(){null!==intervalId&&(clearInterval(intervalId),intervalId=null)}function alarm(){let kind=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\";try{var soundUrl;soundUrl=\"click\"===kind?M.cfg.wwwroot+\"/blocks/pomodoro/sounds/press.mp3\":M.cfg.wwwroot+\"/blocks/pomodoro/sounds/alert.mp3\",new Audio(soundUrl).play()}catch(e){window.navigator&&window.navigator.vibrate&&window.navigator.vibrate(200)}}function $(id){return document.getElementById(id)}function now(){return Date.now()}function readInt(v,d){const n=parseInt(v??\"\",10);return Number.isFinite(n)?n:d}function formatTime(ms){const s=Math.max(0,Math.floor(ms/1e3));return`${Math.floor(s/60).toString().padStart(2,\"0\")}:${(s%60).toString().padStart(2,\"0\")}`}function getTimerElement(){return $(\"pomodoro-timer-display\")}function renderTomatoes(el,sessionscount,interval){if(!el)return;const n=Math.max(0,Number(sessionscount)||0),m=Math.max(1,Number(interval)||0),filled=n%m===0&&0!==n?m:n%m;el.innerHTML=Array.from({length:m},(_,i)=>`<span class=\"tomato ${i<filled?\"filled\":\"\"}\" aria-hidden=\"true\"></span>`).join(\"\")}function openDialog(d){d&&\"function\"==typeof d.showModal&&d.showModal()}function closeDialog(d){d&&d.open&&d.close()}function startTimer(endTs,el,onDone){let playButton=document.getElementById(\"start\"),pauseButton=document.getElementById(\"pause\");if(state=\"playing\",!el||!Number.isFinite(endTs))return;if(endTs<=now())return localStorage.removeItem(K.END),void localStorage.setItem(K.RUNNING,\"0\");clearTick();const tick=()=>{const left=endTs-now();if(left<=0)return clearTick(),el.textContent=\"00:00\",localStorage.removeItem(K.END),localStorage.setItem(K.RUNNING,\"0\"),sendMessage({type:\"stop\"}),void(onDone&&onDone());el.textContent=formatTime(left)};tick(),intervalId=setInterval(tick,1e3),\"playing\"===state&&(playButton.classList.contains(\"hidden\")||playButton.classList.add(\"hidden\"),pauseButton.classList.contains(\"hidden\")&&pauseButton.classList.remove(\"hidden\"))}function stopAndReset(el){let play=arguments.length>1&&void 0!==arguments[1]&&arguments[1];state=\"stopped\";let playButton=document.getElementById(\"start\"),pauseButton=document.getElementById(\"pause\");\"stopped\"===state&&(pauseButton.classList.contains(\"hidden\")||pauseButton.classList.add(\"hidden\"),playButton.classList.contains(\"hidden\")&&playButton.classList.remove(\"hidden\")),clearTick(),localStorage.removeItem(K.END),localStorage.setItem(K.RUNNING,\"0\"),sendMessage({type:\"stop\"}),el&&(el.textContent=formatTime(cfg.focusMs)),play&&alarm()}function startPausePomodoro(onAfter){if(!cfg)return;const display=getTimerElement();if(!display)return;const remainRaw=localStorage.getItem(K.REMAINING),running=\"1\"===localStorage.getItem(K.RUNNING),endRaw=localStorage.getItem(K.END);if(null!==remainRaw){const remain=Number(remainRaw);return void(Number.isFinite(remain)&&remain>0&&(localStorage.removeItem(K.REMAINING),startFocus(display,remain)))}if(running){if(null!==endRaw){const left=Number(endRaw)-now();left>0&&(localStorage.setItem(K.REMAINING,String(left)),sendMessage({type:\"pause\",remaining:left}),display&&(display.textContent=formatTime(left)))}clearTick(),localStorage.setItem(K.RUNNING,\"0\")}else!function(onAfter){setPhase(\"wellness\");const modal=$(\"wellness-modal\"),countdown=$(\"wellness-countdown\");if(!cfg)return;if(!modal||!countdown)return void onAfter();const end=now()+1e3*cfg.wellnessSec;openDialog(modal),startTimer(end,countdown,()=>{closeDialog(modal),onAfter()});const skip=$(\"skip-wellness\");skip&&(skip.type=\"button\",skip.onclick=e=>{alarm(\"click\"),e.preventDefault(),e.stopPropagation(),closeDialog(modal),onAfter()})}(onAfter)}function startFocus(el,ms){if(!cfg)return;const focusDur=Number.isFinite(ms)&&ms>0?ms:15e5;setPhase(\"focus\");const starttsSec=Math.floor(now()/1e3),end=now()+focusDur;localStorage.setItem(K.END,String(end)),localStorage.setItem(K.RUNNING,\"1\"),sendMessage({type:\"start\",end:end}),startTimer(end,el,()=>{ajax(\"block_pomodoro_increment_session\",{courseid:cfg.courseid,startts:starttsSec}).then(res=>{alarm();const count=res&&\"number\"==typeof res.sessionscount?res.sessionscount:1;renderTomatoes($(\"pomodoro-tomatoes\"),count,cfg.longbreakInterval);const isLong=(c=count,(i=cfg.longbreakInterval)>0&&c>0&&c%i===0);var c,i;!function(el,ms,kind){setPhase(\"break\",kind);const dlg=$(\"break-modal\"),cd=$(\"break-countdown\");cd&&(cd.textContent=formatTime(ms)),openDialog(dlg),startTimer(now()+ms,cd||el,()=>{alarm(\"focus\"),closeDialog(dlg),stopAndReset(el,!1)});const ok=$(\"dismiss-break\");ok&&(ok.type=\"button\",ok.onclick=e=>{alarm(\"click\"),e.preventDefault(),e.stopPropagation(),closeDialog(dlg)})}(el,isLong?cfg.longbreakMs:cfg.shortbreakMs,isLong?\"long\":\"short\"),state=\"stopped\";let playButton=document.getElementById(\"start\"),pauseButton=document.getElementById(\"pause\");return\"stopped\"===state&&(pauseButton.classList.contains(\"hidden\")||pauseButton.classList.add(\"hidden\"),playButton.classList.contains(\"hidden\")&&playButton.classList.remove(\"hidden\")),null}).catch(Notification.exception)})}function setPhase(p,k){localStorage.setItem(K.PHASE,p),k?localStorage.setItem(K.BREAKKIND,k):localStorage.removeItem(K.BREAKKIND)}function sendMessage(msg){channel?channel.postMessage(msg):(localStorage.setItem(K.MSG,JSON.stringify(Object.assign({},msg,{t:now()}))),setTimeout(function(){localStorage.removeItem(K.MSG)},50))}function handleMessage(msg,el){if(msg)return\"start\"===msg.type&&msg.end?(startTimer(Number(msg.end),el),localStorage.setItem(K.END,String(msg.end)),void localStorage.setItem(K.RUNNING,\"1\")):\"pause\"===msg.type&&void 0!==msg.remaining?(clearTick(),localStorage.setItem(K.REMAINING,String(msg.remaining)),localStorage.setItem(K.RUNNING,\"0\"),void(el&&(el.textContent=formatTime(msg.remaining)))):void(\"stop\"===msg.type&&localStorage.getItem(K.END)&&stopAndReset(el,!1))}function ajax(name,args){return Ajax.call([{methodname:name,args:args}])[0].catch(Notification.exception)}return{init(){const display=getTimerElement();if(!display)return;cfg=function(timerDisplay){const courseid=readInt(timerDisplay.getAttribute(\"data-courseid\"),0),wellnessSec=readInt(timerDisplay.getAttribute(\"data-wellness-sec\"),30);let focusMs;const focusSec=readInt(timerDisplay.getAttribute(\"data-focus-sec\"),NaN);if(Number.isFinite(focusSec))focusMs=1e3*focusSec;else{let focusMin=readInt(timerDisplay.getAttribute(\"data-focus-min\"),NaN);Number.isFinite(focusMin)||(focusMin=readInt((timerDisplay.getAttribute(\"data-duration\")||\"25:00\").split(\":\")[0]||\"25\",25)),focusMs=60*focusMin*1e3}let shortbreakMs,longbreakMs;const sbSec=readInt(timerDisplay.getAttribute(\"data-shortbreak-sec\"),NaN),lbSec=readInt(timerDisplay.getAttribute(\"data-longbreak-sec\"),NaN);return Number.isFinite(sbSec)&&(shortbreakMs=1e3*sbSec),Number.isFinite(lbSec)&&(longbreakMs=1e3*lbSec),Number.isFinite(shortbreakMs)||(shortbreakMs=60*readInt(timerDisplay.getAttribute(\"data-shortbreak-min\"),5)*1e3),Number.isFinite(longbreakMs)||(longbreakMs=60*readInt(timerDisplay.getAttribute(\"data-longbreak-min\"),15)*1e3),{courseid:courseid,wellnessSec:wellnessSec,focusMs:focusMs,shortbreakMs:shortbreakMs,longbreakMs:longbreakMs,longbreakInterval:readInt(timerDisplay.getAttribute(\"data-longbreak-interval\"),3)}}(display),K=function(courseid){const p=`pomodoro:${Number.isFinite(courseid)&&courseid>0?courseid:\"global\"}`;return{END:`${p}:endTimestamp`,RUNNING:`${p}:running`,PHASE:`${p}:phase`,BREAKKIND:`${p}:breakKind`,MSG:`${p}:msg`,CHANNEL:`${p}:channel`}}(cfg.courseid);const intervalEl=$(\"pomodoro-interval\");intervalEl&&(intervalEl.textContent=String(cfg.longbreakInterval)),\"undefined\"!=typeof BroadcastChannel&&(channel=new BroadcastChannel(K.CHANNEL),channel.onmessage=e=>handleMessage(e.data,display)),ajax(\"block_pomodoro_get_status\",{courseid:cfg.courseid}).then(res=>{const count=res&&\"number\"==typeof res.sessionscount?res.sessionscount:0;return renderTomatoes($(\"pomodoro-tomatoes\"),count,cfg.longbreakInterval),null}).catch(Notification.exception);const existingRaw=localStorage.getItem(K.END);if(null!==existingRaw){const existing=Number(existingRaw),phase=localStorage.getItem(K.PHASE)||\"\";let target;target=\"wellness\"===phase?$(\"wellness-countdown\"):\"break\"===phase?$(\"break-countdown\"):display,Number.isFinite(existing)&&existing>now()+250?(\"break\"===phase&&openDialog($(\"break-modal\")),\"wellness\"===phase&&openDialog($(\"wellness-modal\")),startTimer(existing,target||display)):(localStorage.removeItem(K.END),localStorage.setItem(K.RUNNING,\"0\"))}window.addEventListener(\"storage\",e=>{if(e.key!==K.END){if(e.key===K.MSG&&e.newValue)try{handleMessage(JSON.parse(e.newValue),display)}catch(err){window&&window.console&&\"function\"==typeof window.console.debug&&window.console.debug(\"Pomodoro: storage MSG parse ignored\",err)}}else if(null!==e.newValue){const val=Number(e.newValue);Number.isFinite(val)&&val>now()+250?startTimer(val,display):(localStorage.removeItem(K.END),localStorage.setItem(K.RUNNING,\"0\"))}else localStorage.setItem(K.RUNNING,\"0\")});const startBtn=$(\"start\");startBtn&&(startBtn.type=\"button\",startBtn.onclick=e=>{alarm(\"click\"),e.preventDefault(),e.stopPropagation(),startPausePomodoro(()=>startFocus(display,cfg.focusMs))});const stopBtn=$(\"pause\");stopBtn&&(stopBtn.type=\"button\",stopBtn.onclick=e=>{alarm(\"click\"),e.preventDefault(),e.stopPropagation(),stopAndReset(display,!1)}),window.addEventListener(\"beforeunload\",()=>{channel&&channel.close()})}}});\n\n//# sourceMappingURL=pomodoro_timer.min.js.map
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/amd/build/pomodoro_timer.min.js b/amd/build/pomodoro_timer.min.js
--- a/amd/build/pomodoro_timer.min.js	(revision ef22ac504c4cd686e15bce178767b2c29e929ecd)
+++ b/amd/build/pomodoro_timer.min.js	(date 1756904845092)
@@ -1,3 +1,3 @@
-define("block_pomodoro/pomodoro_timer",["core/ajax","core/notification"],function(Ajax,Notification){let cfg=null,K=null,channel=null,intervalId=null,state="stopped";function clearTick(){null!==intervalId&&(clearInterval(intervalId),intervalId=null)}function alarm(){let kind=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";try{var soundUrl;soundUrl="click"===kind?M.cfg.wwwroot+"/blocks/pomodoro/sounds/press.mp3":M.cfg.wwwroot+"/blocks/pomodoro/sounds/alert.mp3",new Audio(soundUrl).play()}catch(e){window.navigator&&window.navigator.vibrate&&window.navigator.vibrate(200)}}function $(id){return document.getElementById(id)}function now(){return Date.now()}function readInt(v,d){const n=parseInt(v??"",10);return Number.isFinite(n)?n:d}function formatTime(ms){const s=Math.max(0,Math.floor(ms/1e3));return`${Math.floor(s/60).toString().padStart(2,"0")}:${(s%60).toString().padStart(2,"0")}`}function getTimerElement(){return $("pomodoro-timer-display")}function renderTomatoes(el,sessionscount,interval){if(!el)return;const n=Math.max(0,Number(sessionscount)||0),m=Math.max(1,Number(interval)||0),filled=n%m===0&&0!==n?m:n%m;el.innerHTML=Array.from({length:m},(_,i)=>`<span class="tomato ${i<filled?"filled":""}" aria-hidden="true"></span>`).join("")}function openDialog(d){d&&"function"==typeof d.showModal&&d.showModal()}function closeDialog(d){d&&d.open&&d.close()}function startTimer(endTs,el,onDone){let playButton=document.getElementById("start"),pauseButton=document.getElementById("pause");if(state="playing",!el||!Number.isFinite(endTs))return;if(endTs<=now())return localStorage.removeItem(K.END),void localStorage.setItem(K.RUNNING,"0");clearTick();const tick=()=>{const left=endTs-now();if(left<=0)return clearTick(),el.textContent="00:00",localStorage.removeItem(K.END),localStorage.setItem(K.RUNNING,"0"),sendMessage({type:"stop"}),void(onDone&&onDone());el.textContent=formatTime(left)};tick(),intervalId=setInterval(tick,1e3),"playing"===state&&(playButton.classList.contains("hidden")||playButton.classList.add("hidden"),pauseButton.classList.contains("hidden")&&pauseButton.classList.remove("hidden"))}function stopAndReset(el){let play=arguments.length>1&&void 0!==arguments[1]&&arguments[1];state="stopped";let playButton=document.getElementById("start"),pauseButton=document.getElementById("pause");"stopped"===state&&(pauseButton.classList.contains("hidden")||pauseButton.classList.add("hidden"),playButton.classList.contains("hidden")&&playButton.classList.remove("hidden")),clearTick(),localStorage.removeItem(K.END),localStorage.setItem(K.RUNNING,"0"),sendMessage({type:"stop"}),el&&(el.textContent=formatTime(cfg.focusMs)),play&&alarm()}function startPausePomodoro(onAfter){if(!cfg)return;const display=getTimerElement();if(!display)return;const remainRaw=localStorage.getItem(K.REMAINING),running="1"===localStorage.getItem(K.RUNNING),endRaw=localStorage.getItem(K.END);if(null!==remainRaw){const remain=Number(remainRaw);return void(Number.isFinite(remain)&&remain>0&&(localStorage.removeItem(K.REMAINING),startFocus(display,remain)))}if(running){if(null!==endRaw){const left=Number(endRaw)-now();left>0&&(localStorage.setItem(K.REMAINING,String(left)),sendMessage({type:"pause",remaining:left}),display&&(display.textContent=formatTime(left)))}clearTick(),localStorage.setItem(K.RUNNING,"0")}else!function(onAfter){setPhase("wellness");const modal=$("wellness-modal"),countdown=$("wellness-countdown");if(!cfg)return;if(!modal||!countdown)return void onAfter();const end=now()+1e3*cfg.wellnessSec;openDialog(modal),startTimer(end,countdown,()=>{closeDialog(modal),onAfter()});const skip=$("skip-wellness");skip&&(skip.type="button",skip.onclick=e=>{alarm("click"),e.preventDefault(),e.stopPropagation(),closeDialog(modal),onAfter()})}(onAfter)}function startFocus(el,ms){if(!cfg)return;const focusDur=Number.isFinite(ms)&&ms>0?ms:15e5;setPhase("focus");const starttsSec=Math.floor(now()/1e3),end=now()+focusDur;localStorage.setItem(K.END,String(end)),localStorage.setItem(K.RUNNING,"1"),sendMessage({type:"start",end:end}),startTimer(end,el,()=>{ajax("block_pomodoro_increment_session",{courseid:cfg.courseid,startts:starttsSec}).then(res=>{alarm();const count=res&&"number"==typeof res.sessionscount?res.sessionscount:1;renderTomatoes($("pomodoro-tomatoes"),count,cfg.longbreakInterval);const isLong=(c=count,(i=cfg.longbreakInterval)>0&&c>0&&c%i===0);var c,i;!function(el,ms,kind){setPhase("break",kind);const dlg=$("break-modal"),cd=$("break-countdown");cd&&(cd.textContent=formatTime(ms)),openDialog(dlg),startTimer(now()+ms,cd||el,()=>{alarm("focus"),closeDialog(dlg),stopAndReset(el,!1)});const ok=$("dismiss-break");ok&&(ok.type="button",ok.onclick=e=>{alarm("click"),e.preventDefault(),e.stopPropagation(),closeDialog(dlg)})}(el,isLong?cfg.longbreakMs:cfg.shortbreakMs,isLong?"long":"short"),state="stopped";let playButton=document.getElementById("start"),pauseButton=document.getElementById("pause");return"stopped"===state&&(pauseButton.classList.contains("hidden")||pauseButton.classList.add("hidden"),playButton.classList.contains("hidden")&&playButton.classList.remove("hidden")),null}).catch(Notification.exception)})}function setPhase(p,k){localStorage.setItem(K.PHASE,p),k?localStorage.setItem(K.BREAKKIND,k):localStorage.removeItem(K.BREAKKIND)}function sendMessage(msg){channel?channel.postMessage(msg):(localStorage.setItem(K.MSG,JSON.stringify(Object.assign({},msg,{t:now()}))),setTimeout(function(){localStorage.removeItem(K.MSG)},50))}function handleMessage(msg,el){if(msg)return"start"===msg.type&&msg.end?(startTimer(Number(msg.end),el),localStorage.setItem(K.END,String(msg.end)),void localStorage.setItem(K.RUNNING,"1")):"pause"===msg.type&&void 0!==msg.remaining?(clearTick(),localStorage.setItem(K.REMAINING,String(msg.remaining)),localStorage.setItem(K.RUNNING,"0"),void(el&&(el.textContent=formatTime(msg.remaining)))):void("stop"===msg.type&&localStorage.getItem(K.END)&&stopAndReset(el,!1))}function ajax(name,args){return Ajax.call([{methodname:name,args:args}])[0].catch(Notification.exception)}return{init(){const display=getTimerElement();if(!display)return;cfg=function(timerDisplay){const courseid=readInt(timerDisplay.getAttribute("data-courseid"),0),wellnessSec=readInt(timerDisplay.getAttribute("data-wellness-sec"),30);let focusMs;const focusSec=readInt(timerDisplay.getAttribute("data-focus-sec"),NaN);if(Number.isFinite(focusSec))focusMs=1e3*focusSec;else{let focusMin=readInt(timerDisplay.getAttribute("data-focus-min"),NaN);Number.isFinite(focusMin)||(focusMin=readInt((timerDisplay.getAttribute("data-duration")||"25:00").split(":")[0]||"25",25)),focusMs=60*focusMin*1e3}let shortbreakMs,longbreakMs;const sbSec=readInt(timerDisplay.getAttribute("data-shortbreak-sec"),NaN),lbSec=readInt(timerDisplay.getAttribute("data-longbreak-sec"),NaN);return Number.isFinite(sbSec)&&(shortbreakMs=1e3*sbSec),Number.isFinite(lbSec)&&(longbreakMs=1e3*lbSec),Number.isFinite(shortbreakMs)||(shortbreakMs=60*readInt(timerDisplay.getAttribute("data-shortbreak-min"),5)*1e3),Number.isFinite(longbreakMs)||(longbreakMs=60*readInt(timerDisplay.getAttribute("data-longbreak-min"),15)*1e3),{courseid:courseid,wellnessSec:wellnessSec,focusMs:focusMs,shortbreakMs:shortbreakMs,longbreakMs:longbreakMs,longbreakInterval:readInt(timerDisplay.getAttribute("data-longbreak-interval"),3)}}(display),K=function(courseid){const p=`pomodoro:${Number.isFinite(courseid)&&courseid>0?courseid:"global"}`;return{END:`${p}:endTimestamp`,RUNNING:`${p}:running`,PHASE:`${p}:phase`,BREAKKIND:`${p}:breakKind`,MSG:`${p}:msg`,CHANNEL:`${p}:channel`}}(cfg.courseid);const intervalEl=$("pomodoro-interval");intervalEl&&(intervalEl.textContent=String(cfg.longbreakInterval)),"undefined"!=typeof BroadcastChannel&&(channel=new BroadcastChannel(K.CHANNEL),channel.onmessage=e=>handleMessage(e.data,display)),ajax("block_pomodoro_get_status",{courseid:cfg.courseid}).then(res=>{const count=res&&"number"==typeof res.sessionscount?res.sessionscount:0;return renderTomatoes($("pomodoro-tomatoes"),count,cfg.longbreakInterval),null}).catch(Notification.exception);const existingRaw=localStorage.getItem(K.END);if(null!==existingRaw){const existing=Number(existingRaw),phase=localStorage.getItem(K.PHASE)||"";let target;target="wellness"===phase?$("wellness-countdown"):"break"===phase?$("break-countdown"):display,Number.isFinite(existing)&&existing>now()+250?("break"===phase&&openDialog($("break-modal")),"wellness"===phase&&openDialog($("wellness-modal")),startTimer(existing,target||display)):(localStorage.removeItem(K.END),localStorage.setItem(K.RUNNING,"0"))}window.addEventListener("storage",e=>{if(e.key!==K.END){if(e.key===K.MSG&&e.newValue)try{handleMessage(JSON.parse(e.newValue),display)}catch(err){window&&window.console&&"function"==typeof window.console.debug&&window.console.debug("Pomodoro: storage MSG parse ignored",err)}}else if(null!==e.newValue){const val=Number(e.newValue);Number.isFinite(val)&&val>now()+250?startTimer(val,display):(localStorage.removeItem(K.END),localStorage.setItem(K.RUNNING,"0"))}else localStorage.setItem(K.RUNNING,"0")});const startBtn=$("start");startBtn&&(startBtn.type="button",startBtn.onclick=e=>{alarm("click"),e.preventDefault(),e.stopPropagation(),startPausePomodoro(()=>startFocus(display,cfg.focusMs))});const stopBtn=$("pause");stopBtn&&(stopBtn.type="button",stopBtn.onclick=e=>{alarm("click"),e.preventDefault(),e.stopPropagation(),stopAndReset(display,!1)}),window.addEventListener("beforeunload",()=>{channel&&channel.close()})}}});
+define("block_pomodoro/pomodoro_timer",["core/ajax","core/notification"],function(Ajax,Notification){let cfg=null,K=null,channel=null,intervalId=null,state="stopped";function clearTick(){null!==intervalId&&(clearInterval(intervalId),intervalId=null)}function alarm(){let kind=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";try{var soundUrl;soundUrl="click"===kind?M.cfg.wwwroot+"/blocks/pomodoro/sounds/press.mp3":M.cfg.wwwroot+"/blocks/pomodoro/sounds/alert.mp3",new Audio(soundUrl).play()}catch(e){window.navigator&&window.navigator.vibrate&&window.navigator.vibrate(200)}}function $(id){return document.getElementById(id)}function now(){return Date.now()}function readInt(v,d){const n=parseInt(v??"",10);return Number.isFinite(n)?n:d}function formatTime(ms){const s=Math.max(0,Math.floor(ms/1e3));return`${Math.floor(s/60).toString().padStart(2,"0")}:${(s%60).toString().padStart(2,"0")}`}function getTimerElement(){return $("pomodoro-timer-display")}function renderTomatoes(el,sessionscount,interval){if(!el)return;const n=Math.max(0,Number(sessionscount)||0),m=Math.max(1,Number(interval)||0),filled=n%m===0&&0!==n?m:n%m;el.innerHTML=Array.from({length:m},(_,i)=>i<filled?'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" width="25" height="25" \n                style="vertical-align:middle; margin-right:6px;">\n                <polygon style="fill:#AB2300;" points="512,155.826 478.609,155.826 ..."/>\n               <polygon style="fill:#AB2300;" points="512,155.826 478.609,155.826 478.609,100.174 445.217,100.174 445.217,66.783 \n                    411.826,66.783 411.826,33.391 300.522,33.391 300.522,66.783 267.13,66.783 267.13,0 233.739,0 233.739,66.783 211.478,66.783 \n                    211.478,33.391 100.174,33.391 100.174,66.783 66.783,66.783 66.783,100.174 33.391,100.174 33.391,155.826 0,155.826 0,345.043 \n                    33.391,345.043 33.391,411.826 66.783,411.826 66.783,445.217 100.174,445.217 100.174,478.609 166.957,478.609 166.957,512 \n                    345.043,512 345.043,478.609 411.826,478.609 411.826,445.217 445.217,445.217 445.217,411.826 478.609,411.826 478.609,345.043 \n                    512,345.043 "/>\n                <polygon style="fill:#4E901E;" points="445.217,100.174 445.217,66.783 411.826,66.783 411.826,33.391 300.522,33.391 \n                    300.522,66.783 289.391,66.783 267.13,66.783 267.13,0 233.739,0 233.739,66.783 222.609,66.783 211.478,66.783 211.478,33.391 \n                    100.174,33.391 100.174,66.783 66.783,66.783 66.783,100.174 33.391,100.174 33.391,155.826 66.783,155.826 133.565,155.826 \n                    133.565,222.609 222.609,222.609 222.609,189.217 289.391,189.217 289.391,222.609 378.435,222.609 378.435,155.826 \n                    445.217,155.826 478.609,155.826 478.609,100.174 "/>\n                <polygon points="233.739,100.174 233.739,122.435 267.13,122.435 267.13,100.174 300.522,100.174 300.522,66.783 267.13,66.783 \n                    267.13,0 233.739,0 233.739,66.783 211.478,66.783 211.478,100.174 "/>\n                <rect x="222.609" y="155.826" width="66.783" height="33.391"/>\n                <polygon points="378.435,122.435 345.043,122.435 345.043,155.826 345.043,189.217 289.391,189.217 289.391,222.609 \n                    345.043,222.609 378.435,222.609 378.435,189.217 378.435,155.826 445.217,155.826 478.609,155.826 478.609,122.435 \n                    478.609,100.174 445.217,100.174 445.217,122.435 "/>\n                <rect x="411.826" y="66.783" width="33.391" height="33.391"/>\n                <rect x="300.522" y="33.391" width="111.304" height="33.391"/>\n                <rect x="100.174" y="33.391" width="111.304" height="33.391"/>\n                <rect x="66.783" y="66.783" width="33.391" height="33.391"/>\n                <polygon points="133.565,155.826 133.565,189.217 133.565,222.609 166.957,222.609 222.609,222.609 222.609,189.217 \n                    166.957,189.217 166.957,155.826 166.957,122.435 133.565,122.435 66.783,122.435 66.783,100.174 33.391,100.174 33.391,122.435 \n                    33.391,155.826 66.783,155.826 "/>\n                <rect x="33.391" y="345.043" width="33.391" height="66.783"/>\n                <rect x="66.783" y="411.826" width="33.391" height="33.391"/>\n                <rect x="100.174" y="445.217" width="66.783" height="33.391"/>\n                <rect x="166.957" y="478.609" width="178.087" height="33.391"/>\n                <rect x="345.043" y="445.217" width="66.783" height="33.391"/>\n                <rect x="411.826" y="411.826" width="33.391" height="33.391"/>\n                <rect x="445.217" y="345.043" width="33.391" height="66.783"/>\n                <rect x="478.609" y="155.826" width="33.391" height="189.217"/>\n                <rect y="155.826" width="33.391" height="189.217"/>\n                <g>\n                    <rect x="66.783" y="189.217" style="fill:#FFFFFF;" width="33.391" height="55.652"/>\n                    <rect x="66.783" y="278.261" style="fill:#FFFFFF;" width="33.391" height="33.391"/>\n                </g>\n            </svg>':'<span class="tomato" aria-hidden="true"></span>').join("")}function openDialog(d){d&&"function"==typeof d.showModal&&d.showModal()}function closeDialog(d){d&&d.open&&d.close()}function startTimer(endTs,el,onDone){let playButton=document.getElementById("start"),pauseButton=document.getElementById("pause");if(state="playing",!el||!Number.isFinite(endTs))return;if(endTs<=now())return localStorage.removeItem(K.END),void localStorage.setItem(K.RUNNING,"0");clearTick();const tick=()=>{const left=endTs-now();if(left<=0)return clearTick(),el.textContent="00:00",localStorage.removeItem(K.END),localStorage.setItem(K.RUNNING,"0"),sendMessage({type:"stop"}),void(onDone&&onDone());el.textContent=formatTime(left)};tick(),intervalId=setInterval(tick,1e3),"playing"===state&&(playButton.classList.contains("hidden")||playButton.classList.add("hidden"),pauseButton.classList.contains("hidden")&&pauseButton.classList.remove("hidden"))}function stopAndReset(el){let play=arguments.length>1&&void 0!==arguments[1]&&arguments[1];state="stopped";let playButton=document.getElementById("start"),pauseButton=document.getElementById("pause");"stopped"===state&&(pauseButton.classList.contains("hidden")||pauseButton.classList.add("hidden"),playButton.classList.contains("hidden")&&playButton.classList.remove("hidden")),clearTick(),localStorage.removeItem(K.END),localStorage.setItem(K.RUNNING,"0"),sendMessage({type:"stop"}),el&&(el.textContent=formatTime(cfg.focusMs)),play&&alarm()}function startPausePomodoro(onAfter){if(!cfg)return;const display=getTimerElement();if(!display)return;const remainRaw=localStorage.getItem(K.REMAINING),running="1"===localStorage.getItem(K.RUNNING),endRaw=localStorage.getItem(K.END);if(null!==remainRaw){const remain=Number(remainRaw);return void(Number.isFinite(remain)&&remain>0&&(localStorage.removeItem(K.REMAINING),startFocus(display,remain)))}if(running){if(null!==endRaw){const left=Number(endRaw)-now();left>0&&(localStorage.setItem(K.REMAINING,String(left)),sendMessage({type:"pause",remaining:left}),display&&(display.textContent=formatTime(left)))}clearTick(),localStorage.setItem(K.RUNNING,"0")}else!function(onAfter){setPhase("wellness");const modal=$("wellness-modal"),countdown=$("wellness-countdown");if(!cfg)return;if(!modal||!countdown)return void onAfter();const end=now()+1e3*cfg.wellnessSec;openDialog(modal),startTimer(end,countdown,()=>{closeDialog(modal),onAfter()});const skip=$("skip-wellness");skip&&(skip.type="button",skip.onclick=e=>{alarm("click"),e.preventDefault(),e.stopPropagation(),closeDialog(modal),onAfter()})}(onAfter)}function startFocus(el,ms){if(!cfg)return;const focusDur=Number.isFinite(ms)&&ms>0?ms:15e5;setPhase("focus");const starttsSec=Math.floor(now()/1e3),end=now()+focusDur;localStorage.setItem(K.END,String(end)),localStorage.setItem(K.RUNNING,"1"),sendMessage({type:"start",end:end}),startTimer(end,el,()=>{ajax("block_pomodoro_increment_session",{courseid:cfg.courseid,startts:starttsSec}).then(res=>{alarm();const count=res&&"number"==typeof res.sessionscount?res.sessionscount:1;renderTomatoes($("pomodoro-tomatoes"),count,cfg.longbreakInterval);const isLong=(c=count,(i=cfg.longbreakInterval)>0&&c>0&&c%i===0);var c,i;!function(el,ms,kind){setPhase("break",kind);const dlg=$("break-modal"),cd=$("break-countdown");cd&&(cd.textContent=formatTime(ms)),openDialog(dlg),startTimer(now()+ms,cd||el,()=>{alarm("focus"),closeDialog(dlg),stopAndReset(el,!1)});const ok=$("dismiss-break");ok&&(ok.type="button",ok.onclick=e=>{alarm("click"),e.preventDefault(),e.stopPropagation(),closeDialog(dlg)})}(el,isLong?cfg.longbreakMs:cfg.shortbreakMs,isLong?"long":"short"),state="stopped";let playButton=document.getElementById("start"),pauseButton=document.getElementById("pause");return"stopped"===state&&(pauseButton.classList.contains("hidden")||pauseButton.classList.add("hidden"),playButton.classList.contains("hidden")&&playButton.classList.remove("hidden")),null}).catch(Notification.exception)})}function setPhase(p,k){localStorage.setItem(K.PHASE,p),k?localStorage.setItem(K.BREAKKIND,k):localStorage.removeItem(K.BREAKKIND)}function sendMessage(msg){channel?channel.postMessage(msg):(localStorage.setItem(K.MSG,JSON.stringify(Object.assign({},msg,{t:now()}))),setTimeout(function(){localStorage.removeItem(K.MSG)},50))}function handleMessage(msg,el){if(msg)return"start"===msg.type&&msg.end?(startTimer(Number(msg.end),el),localStorage.setItem(K.END,String(msg.end)),void localStorage.setItem(K.RUNNING,"1")):"pause"===msg.type&&void 0!==msg.remaining?(clearTick(),localStorage.setItem(K.REMAINING,String(msg.remaining)),localStorage.setItem(K.RUNNING,"0"),void(el&&(el.textContent=formatTime(msg.remaining)))):void("stop"===msg.type&&localStorage.getItem(K.END)&&stopAndReset(el,!1))}function ajax(name,args){return Ajax.call([{methodname:name,args:args}])[0].catch(Notification.exception)}return{init(){const display=getTimerElement();if(!display)return;cfg=function(timerDisplay){const courseid=readInt(timerDisplay.getAttribute("data-courseid"),0),wellnessSec=readInt(timerDisplay.getAttribute("data-wellness-sec"),30);let focusMs;const focusSec=readInt(timerDisplay.getAttribute("data-focus-sec"),NaN);if(Number.isFinite(focusSec))focusMs=1e3*focusSec;else{let focusMin=readInt(timerDisplay.getAttribute("data-focus-min"),NaN);Number.isFinite(focusMin)||(focusMin=readInt((timerDisplay.getAttribute("data-duration")||"25:00").split(":")[0]||"25",25)),focusMs=60*focusMin*1e3}let shortbreakMs,longbreakMs;const sbSec=readInt(timerDisplay.getAttribute("data-shortbreak-sec"),NaN),lbSec=readInt(timerDisplay.getAttribute("data-longbreak-sec"),NaN);return Number.isFinite(sbSec)&&(shortbreakMs=1e3*sbSec),Number.isFinite(lbSec)&&(longbreakMs=1e3*lbSec),Number.isFinite(shortbreakMs)||(shortbreakMs=60*readInt(timerDisplay.getAttribute("data-shortbreak-min"),5)*1e3),Number.isFinite(longbreakMs)||(longbreakMs=60*readInt(timerDisplay.getAttribute("data-longbreak-min"),15)*1e3),{courseid:courseid,wellnessSec:wellnessSec,focusMs:focusMs,shortbreakMs:shortbreakMs,longbreakMs:longbreakMs,longbreakInterval:readInt(timerDisplay.getAttribute("data-longbreak-interval"),3)}}(display),K=function(courseid){const p=`pomodoro:${Number.isFinite(courseid)&&courseid>0?courseid:"global"}`;return{END:`${p}:endTimestamp`,RUNNING:`${p}:running`,PHASE:`${p}:phase`,BREAKKIND:`${p}:breakKind`,MSG:`${p}:msg`,CHANNEL:`${p}:channel`}}(cfg.courseid);const intervalEl=$("pomodoro-interval");intervalEl&&(intervalEl.textContent=String(cfg.longbreakInterval)),"undefined"!=typeof BroadcastChannel&&(channel=new BroadcastChannel(K.CHANNEL),channel.onmessage=e=>handleMessage(e.data,display)),ajax("block_pomodoro_get_status",{courseid:cfg.courseid}).then(res=>{const count=res&&"number"==typeof res.sessionscount?res.sessionscount:0;return renderTomatoes($("pomodoro-tomatoes"),count,cfg.longbreakInterval),null}).catch(Notification.exception);const existingRaw=localStorage.getItem(K.END);if(null!==existingRaw){const existing=Number(existingRaw),phase=localStorage.getItem(K.PHASE)||"";let target;target="wellness"===phase?$("wellness-countdown"):"break"===phase?$("break-countdown"):display,Number.isFinite(existing)&&existing>now()+250?("break"===phase&&openDialog($("break-modal")),"wellness"===phase&&openDialog($("wellness-modal")),startTimer(existing,target||display)):(localStorage.removeItem(K.END),localStorage.setItem(K.RUNNING,"0"))}window.addEventListener("storage",e=>{if(e.key!==K.END){if(e.key===K.MSG&&e.newValue)try{handleMessage(JSON.parse(e.newValue),display)}catch(err){window&&window.console&&"function"==typeof window.console.debug&&window.console.debug("Pomodoro: storage MSG parse ignored",err)}}else if(null!==e.newValue){const val=Number(e.newValue);Number.isFinite(val)&&val>now()+250?startTimer(val,display):(localStorage.removeItem(K.END),localStorage.setItem(K.RUNNING,"0"))}else localStorage.setItem(K.RUNNING,"0")});const startBtn=$("start");startBtn&&(startBtn.type="button",startBtn.onclick=e=>{alarm("click"),e.preventDefault(),e.stopPropagation(),startPausePomodoro(()=>startFocus(display,cfg.focusMs))});const stopBtn=$("pause");stopBtn&&(stopBtn.type="button",stopBtn.onclick=e=>{alarm("click"),e.preventDefault(),e.stopPropagation(),stopAndReset(display,!1)}),window.addEventListener("beforeunload",()=>{channel&&channel.close()})}}});
 
 //# sourceMappingURL=pomodoro_timer.min.js.map
\ No newline at end of file
Index: amd/build/pomodoro_timer.min.js.map
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\"version\":3,\"file\":\"pomodoro_timer.min.js\",\"sources\":[\"../src/pomodoro_timer.js\"],\"sourcesContent\":[\"/**\\n * Pomodoro Timer (AMD) — scoped by course, increments only when focus ends.\\n * WS: block_pomodoro_increment_session(courseid:int, startts:int [UNIX seconds])\\n *     block_pomodoro_get_status(courseid:int)\\n */\\ndefine(['core/ajax', 'core/notification'], function(Ajax, Notification) {\\n    'use strict';\\n\\n    // ---------------------------------------------------------------------\\n    // Module-level shared mutable state (per page load)\\n    // ---------------------------------------------------------------------\\n    /**\\n     * @typedef {Object} Config\\n     * @property {number} courseid\\n     * @property {number} wellnessSec\\n     * @property {number} focusMs\\n     * @property {number} shortbreakMs\\n     * @property {number} longbreakMs\\n     * @property {number} longbreakInterval\\n     */\\n    /** @type {null|Config} */\\n    let cfg = null; // Set in init().\\n    /**\\n     * @typedef {Object} ScopedKeys\\n     * @property {string} END End timestamp key.\\n     * @property {string} REMAINING\\n     * @property {string} RUNNING Running state key.\\n     * @property {string} PHASE\\n     * @property {string} BREAKKIND\\n     * @property {string} MSG\\n     * @property {string} CHANNEL\\n     */\\n    /** @type {null|ScopedKeys} */\\n    let K = null; // Key names (scoped localStorage) set in init().\\n    /** @type {null|BroadcastChannel} */\\n    let channel = null; // Broadcast channel instance.\\n    /** @type {null|number} */\\n    let intervalId = null; // Active countdown interval id.\\n\\n    let state = 'stopped';\\n    // ---------------------------------------------------------------------\\n    // Utility helpers\\n    /**\\n     * Clears the active countdown interval, if any.\\n     */\\n    function clearTick() {\\n        if (intervalId !== null) {\\n            clearInterval(intervalId);\\n            intervalId = null;\\n        }\\n    }\\n\\n    /**\\n     * Plays an alarm sound (simple beep using Audio API).\\n     * @param {string} [kind] Type of alarm sound to play ('click' or other).\\n     */\\n    function alarm(kind = '') {\\n        try {\\n            var soundUrl;\\n            if (kind === 'click') {\\n                soundUrl = M.cfg.wwwroot + '/blocks/pomodoro/sounds/press.mp3';\\n            } else {\\n                soundUrl = M.cfg.wwwroot + '/blocks/pomodoro/sounds/alert.mp3';\\n            }\\n            // Create an Audio object\\n            var audio = new Audio(soundUrl);// Replace with actual path if needed\\n            audio.play();\\n        } catch (e) {\\n            // Fallback: browser beep\\n            if (window.navigator && window.navigator.vibrate) {\\n                window.navigator.vibrate(200);\\n            }\\n        }\\n    }\\n\\n    // ---------------------------------------------------------------------\\n    /**\\n     * Shorthand getElementById.\\n     * @param {string} id\\n     * @returns {HTMLElement|null}\\n     */\\n    function $(id) {\\n        return document.getElementById(id);\\n    }\\n\\n    /**\\n     * Now in ms.\\n     * @returns {number}\\n     */\\n    function now() {\\n        return Date.now();\\n    }\\n\\n    /**\\n     * Parse an integer with default.\\n     * @param {string|number|undefined|null} v\\n     * @param {number} d Default value\\n     * @returns {number}\\n     */\\n    function readInt(v, d) {\\n        const n = parseInt(v ?? '', 10);\\n        return Number.isFinite(n) ? n : d;\\n    }\\n\\n    /**\\n     * Format milliseconds as mm:ss.\\n     * @param {number} ms\\n     * @returns {string}\\n     */\\n    function formatTime(ms) {\\n        const s = Math.max(0, Math.floor(ms / 1000));\\n        const m = Math.floor(s / 60).toString().padStart(2, '0');\\n        const r = (s % 60).toString().padStart(2, '0');\\n        return `${m}:${r}`;\\n    }\\n\\n    // =====================\\n    // UI Functions\\n    // =====================\\n    /**\\n     * Returns the display element for the Pomodoro timer.\\n     * @returns {HTMLElement|null}\\n     */\\n    function getTimerElement() {\\n        return $('pomodoro-timer-display');\\n    }\\n\\n    /**\\n     * Renders tomato icons for Pomodoro sessions.\\n     * @param {HTMLElement} el The container element.\\n     * @param {number} sessionscount Number of completed sessions.\\n     * @param {number} interval Number of sessions per long break.\\n     */\\n    function renderTomatoes(el, sessionscount, interval) {\\n        if (!el) {\\n            return;\\n        }\\n        const n = Math.max(0, Number(sessionscount) || 0);\\n        const m = Math.max(1, Number(interval) || 0);\\n        const filled = ((n % m) === 0 && n !== 0) ? m : (n % m);\\n        el.innerHTML = Array.from({length: m}, (_, i) =>\\n            `<span class=\\\"tomato ${i < filled ? 'filled' : ''}\\\" aria-hidden=\\\"true\\\"></span>`\\n        ).join('');\\n    }\\n\\n    /**\\n     * Opens the dialog element.\\n     * @param {HTMLDialogElement} d The dialog element to open.\\n     */\\n    function openDialog(d) {\\n        if (d && typeof d.showModal === 'function') {\\n            d.showModal();\\n        }\\n    }\\n\\n    /**\\n     * Closes the dialog element.\\n     * @param {HTMLDialogElement} d The dialog element to open.\\n     */\\n    function closeDialog(d) {\\n        if (d && d.open) {\\n            d.close();\\n        }\\n    }\\n\\n    // =====================\\n    // Pomodoro Logic\\n    // =====================\\n    /**\\n     * Extracts Pomodoro configuration from the timer display element. Fallback to defaults if attributes are missing or invalid.\\n     * @param {HTMLElement} timerDisplay The timer display element.\\n     * @returns {Config}\\n     */\\n    function getConfig(timerDisplay) {\\n        const courseid = readInt(timerDisplay.getAttribute('data-courseid'), 0);\\n        const wellnessSec = readInt(timerDisplay.getAttribute('data-wellness-sec'), 30);\\n        let focusMs;\\n        const focusSec = readInt(timerDisplay.getAttribute('data-focus-sec'), NaN);\\n        if (Number.isFinite(focusSec)) {\\n            focusMs = focusSec * 1000;\\n        } else {\\n            let focusMin = readInt(timerDisplay.getAttribute('data-focus-min'), NaN);\\n            if (!Number.isFinite(focusMin)) {\\n                const dur = timerDisplay.getAttribute('data-duration') || '25:00';\\n                const parts = dur.split(':');\\n                const mm = parts[0] || '25';\\n                focusMin = readInt(mm, 25);\\n            }\\n            focusMs = focusMin * 60 * 1000;\\n        }\\n        let shortbreakMs;\\n        let longbreakMs;\\n        const sbSec = readInt(timerDisplay.getAttribute('data-shortbreak-sec'), NaN);\\n        const lbSec = readInt(timerDisplay.getAttribute('data-longbreak-sec'), NaN);\\n        if (Number.isFinite(sbSec)) {\\n            shortbreakMs = sbSec * 1000;\\n        }\\n        if (Number.isFinite(lbSec)) {\\n            longbreakMs = lbSec * 1000;\\n        }\\n        if (!Number.isFinite(shortbreakMs)) {\\n            shortbreakMs = readInt(timerDisplay.getAttribute('data-shortbreak-min'), 5) * 60 * 1000;\\n        }\\n        if (!Number.isFinite(longbreakMs)) {\\n            longbreakMs = readInt(timerDisplay.getAttribute('data-longbreak-min'), 15) * 60 * 1000;\\n        }\\n        const longbreakInterval = readInt(timerDisplay.getAttribute('data-longbreak-interval'), 3);\\n        return {courseid, wellnessSec, focusMs, shortbreakMs, longbreakMs, longbreakInterval};\\n    }\\n\\n    /**\\n     * Determines if the next break is a long break.\\n     * @param {number} c Number of completed sessions.\\n     * @param {number} i Interval for long breaks.\\n     */\\n    function nextIsLongBreak(c, i) {\\n        return i > 0 && c > 0 && (c % i) === 0;\\n    }\\n\\n    /**\\n     * Starts the countdown timer.\\n     * @param {number} endTs Timestamp (ms) when the timer ends.\\n     * @param {HTMLElement} el Element to display the countdown.\\n     * @param {Function} onDone Callback when timer finishes.\\n     */\\n    function startTimer(endTs, el, onDone) {\\n        let playButton = document.getElementById('start');\\n        let pauseButton = document.getElementById('pause');\\n        state = 'playing';\\n        if (!el || !Number.isFinite(endTs)) {\\n            return;\\n        }\\n        if (endTs <= now()) {\\n            localStorage.removeItem(K.END);\\n            localStorage.setItem(K.RUNNING, '0');\\n            return;\\n        }\\n\\n        clearTick();\\n        const tick = () => {\\n            const left = endTs - now();\\n            if (left <= 0) {\\n                clearTick();\\n                el.textContent = '00:00';\\n                localStorage.removeItem(K.END);\\n                localStorage.setItem(K.RUNNING, '0');\\n                sendMessage({type: 'stop'});\\n                if (onDone) {\\n                    onDone();\\n                }\\n                return;\\n            }\\n            el.textContent = formatTime(left);\\n        };\\n        tick();\\n        intervalId = setInterval(tick, 1000);\\n\\n        if (state === 'playing') {\\n            if(!playButton.classList.contains('hidden')){\\n                playButton.classList.add('hidden');\\n            }\\n\\n            if(pauseButton.classList.contains('hidden')){\\n                pauseButton.classList.remove('hidden');\\n            }\\n        }\\n    }\\n\\n    /**\\n     * Stop the timer and reset the display.\\n     * @param {HTMLElement} el The element to update with reset time.\\n     * @param {boolean} play Whether to play the alarm sound.\\n     */\\n    function stopAndReset(el, play = false) {\\n        state = 'stopped';\\n\\n        let playButton = document.getElementById('start');\\n        let pauseButton = document.getElementById('pause');\\n\\n        if (state === 'stopped') {\\n            if(!pauseButton.classList.contains('hidden')){\\n                pauseButton.classList.add('hidden');\\n            }\\n\\n            if(playButton.classList.contains('hidden')){\\n                playButton.classList.remove('hidden');\\n            }\\n        }\\n    clearTick();\\n        localStorage.removeItem(K.END);\\n        localStorage.setItem(K.RUNNING, '0');\\n        sendMessage({type: 'stop'});\\n        if (el) {\\n            el.textContent = formatTime(cfg.focusMs);\\n        }\\n        if (play) {\\n            alarm();\\n        }\\n    }\\n\\n    /**\\n     * Starts or pauses the Pomodoro timer.\\n     * @param {Function} onAfter Callback to execute after starting wellness or focus.\\n     */\\n    function startPausePomodoro(onAfter) {\\n        if (!cfg) {\\n            return;\\n        }\\n        const display = getTimerElement();\\n        if (!display) {\\n            return;\\n        }\\n\\n        const remainRaw = localStorage.getItem(K.REMAINING);\\n        const running = localStorage.getItem(K.RUNNING) === '1';\\n        const endRaw = localStorage.getItem(K.END);\\n\\n        // Resume\\n        if (remainRaw !== null) {\\n            // Continue timer from REMAINING\\n            const remain = Number(remainRaw);\\n            if (Number.isFinite(remain) && remain > 0) {\\n                localStorage.removeItem(K.REMAINING);\\n                startFocus(display, remain);\\n            }\\n            return;\\n        }\\n\\n        // Start\\n        if (!running) {\\n            // Not running, start wellness then focus\\n            startWellness(onAfter);\\n            return;\\n        }\\n\\n        // Pause\\n        if (endRaw !== null) {\\n            const end = Number(endRaw);\\n            const left = end - now();\\n            if (left > 0) {\\n                localStorage.setItem(K.REMAINING, String(left));\\n                sendMessage({type: 'pause', remaining: left});\\n                if (display) {\\n                    display.textContent = formatTime(left);\\n                }\\n            }\\n        }\\n        clearTick();\\n        localStorage.setItem(K.RUNNING, '0');\\n    }\\n\\n    /**\\n     * Start the wellness countdown and call the callback after completion.\\n     * @param {Function} onAfter Callback to execute after wellness period ends.\\n     */\\n    function startWellness(onAfter) {\\n        setPhase('wellness');\\n        const modal = $('wellness-modal');\\n        const countdown = $('wellness-countdown');\\n        if (!cfg) {\\n            return;\\n        }\\n        if (!modal || !countdown) {\\n            onAfter();\\n            return;\\n        }\\n        const end = now() + cfg.wellnessSec * 1000;\\n        openDialog(modal);\\n        startTimer(end, countdown, () => {\\n            closeDialog(modal);\\n            onAfter();\\n        });\\n        const skip = $('skip-wellness');\\n        if (skip) {\\n            skip.type = 'button';\\n            skip.onclick = (e) => {\\n                alarm('click')\\n                e.preventDefault();\\n                e.stopPropagation();\\n                closeDialog(modal);\\n                onAfter();\\n            };\\n        }\\n    }\\n\\n    /**\\n     * Start a break timer and handle break modal UI.\\n     * @param {HTMLElement} el The element to update with the break time.\\n     * @param {number} ms Duration of the break in milliseconds.\\n     * @param {string} kind Type of break ('short' or 'long').\\n     */\\n    function startBreak(el, ms, kind) {\\n        setPhase('break', kind);\\n        const dlg = $('break-modal');\\n        const cd = $('break-countdown');\\n        if (cd) {\\n            cd.textContent = formatTime(ms);\\n        }\\n        openDialog(dlg);\\n        const end = now() + ms;\\n        startTimer(end, cd || el, () => {\\n            alarm('focus');\\n            closeDialog(dlg);\\n            stopAndReset(el, false);\\n        });\\n        const ok = $('dismiss-break');\\n        if (ok) {\\n            ok.type = 'button';\\n            ok.onclick = (e) => {\\n                alarm('click');\\n                e.preventDefault();\\n                e.stopPropagation();\\n                closeDialog(dlg);\\n            };\\n        }\\n    }\\n\\n    /**\\n     * Starts the focus timer.\\n     * @param {HTMLElement} el The element to display the countdown.\\n     * @param {number} ms Duration of the focus period in milliseconds.\\n     */\\n    function startFocus(el, ms) {\\n        if (!cfg) {\\n            return;\\n        }\\n        const focusDur = Number.isFinite(ms) && ms > 0 ? ms : 25 * 60 * 1000;\\n        setPhase('focus');\\n        const starttsSec = Math.floor(now() / 1000);\\n        const end = now() + focusDur;\\n        localStorage.setItem(K.END, String(end));\\n        localStorage.setItem(K.RUNNING, '1');\\n        sendMessage({type: 'start', end});\\n        startTimer(end, el, () => {\\n            ajax('block_pomodoro_increment_session', {courseid: cfg.courseid, startts: starttsSec})\\n                .then((res) => {\\n                    alarm();\\n                    const count = res && typeof res.sessionscount === 'number' ? res.sessionscount : 1;\\n                    renderTomatoes($('pomodoro-tomatoes'), count, cfg.longbreakInterval);\\n                    const isLong = nextIsLongBreak(count, cfg.longbreakInterval);\\n                    startBreak(el, isLong ? cfg.longbreakMs : cfg.shortbreakMs, isLong ? 'long' : 'short');\\n                    state = 'stopped';\\n                    let playButton = document.getElementById('start');\\n                    let pauseButton = document.getElementById('pause');\\n                    if (state === 'stopped') {\\n                        if(!pauseButton.classList.contains('hidden')){\\n                            pauseButton.classList.add('hidden');\\n                        }\\n\\n                        if(playButton.classList.contains('hidden')){\\n                            playButton.classList.remove('hidden');\\n                        }\\n                    }\\n                    return null;\\n                })\\n                .catch(Notification.exception);\\n        });\\n    }\\n\\n    // =====================\\n    // State Storage & Inter-tab Communication\\n    // =====================\\n    /**\\n     * Returns scoped localStorage key names for a given course.\\n     * @param {number} courseid The course ID to scope keys.\\n     */\\n    function scoped(courseid) {\\n        /** @returns {ScopedKeys} */\\n        const cid = Number.isFinite(courseid) && courseid > 0 ? courseid : 'global';\\n        const p = `pomodoro:${cid}`;\\n        return {\\n            END: `${p}:endTimestamp`,\\n            RUNNING: `${p}:running`,\\n            PHASE: `${p}:phase`,\\n            BREAKKIND: `${p}:breakKind`,\\n            MSG: `${p}:msg`,\\n            CHANNEL: `${p}:channel`\\n        };\\n    }\\n\\n    /**\\n     * Sets the current phase and optional break kind in localStorage.\\n     * @param {string} p Phase name.\\n     * @param {string} [k] Optional break kind.\\n     */\\n    function setPhase(p, k) {\\n        localStorage.setItem(K.PHASE, p);\\n        if (k) {\\n            localStorage.setItem(K.BREAKKIND, k);\\n        } else {\\n            localStorage.removeItem(K.BREAKKIND);\\n        }\\n    }\\n\\n    /**\\n     * Gets the current phase from localStorage.\\n     * @returns {string} The current phase name.\\n     */\\n    function getPhase() {\\n        return localStorage.getItem(K.PHASE) || '';\\n    }\\n\\n    /**\\n     * Send a message to other tabs or via BroadcastChannel.\\n     * @param {Object} msg The message object to send.\\n     */\\n    function sendMessage(msg) {\\n        if (channel) {\\n            channel.postMessage(msg);\\n        } else {\\n            localStorage.setItem(K.MSG, JSON.stringify(Object.assign({}, msg, {t: now()})));\\n            setTimeout(function() {\\n                localStorage.removeItem(K.MSG);\\n            }, 50);\\n        }\\n    }\\n\\n    /**\\n     * Handle incoming messages for timer synchronization.\\n     * @param {Object} msg The message object.\\n     * @param {HTMLElement} el The display element to update.\\n     */\\n    function handleMessage(msg, el) {\\n        if (!msg) {\\n            return;\\n        }\\n        if (msg.type === 'start' && msg.end) {\\n            startTimer(Number(msg.end), el);\\n            localStorage.setItem(K.END, String(msg.end));\\n            localStorage.setItem(K.RUNNING, '1');\\n            return;\\n        }\\n        if (msg.type === 'pause' && typeof msg.remaining !== 'undefined') {\\n            clearTick();\\n            localStorage.setItem(K.REMAINING, String(msg.remaining));\\n            localStorage.setItem(K.RUNNING, '0');\\n            if (el) {\\n                el.textContent = formatTime(msg.remaining);\\n            }\\n            return;\\n        }\\n        if ((msg.type === 'stop') && localStorage.getItem(K.END)) {\\n            stopAndReset(el, false);\\n        }\\n    }\\n\\n    /**\\n     * Make an AJAX call using Moodle's core Ajax API.\\n     * @param {string} name The web service method name.\\n     * @param {Object} args Arguments for the web service call.\\n     * @returns {Promise<any>} Promise resolving to the response.\\n     */\\n    function ajax(name, args) {\\n        return Ajax.call([{methodname: name, args}])[0].catch(Notification.exception);\\n    }\\n\\n    return {\\n        init() {\\n            const display = getTimerElement();\\n            if (!display) {\\n                return;\\n            }\\n            cfg = getConfig(display);\\n            K = scoped(cfg.courseid);\\n\\n            // UI: show interval number\\n            const intervalEl = $('pomodoro-interval');\\n            if (intervalEl) {\\n                intervalEl.textContent = String(cfg.longbreakInterval);\\n            }\\n\\n            // Broadcast channel\\n            if (typeof BroadcastChannel !== 'undefined') {\\n                channel = new BroadcastChannel(K.CHANNEL);\\n                channel.onmessage = (e) => handleMessage(e.data, display);\\n            }\\n\\n            // Initial tomatoes from server\\n            ajax('block_pomodoro_get_status', {courseid: cfg.courseid})\\n                .then((res) => {\\n                    const count = res && typeof res.sessionscount === 'number' ? res.sessionscount : 0;\\n                    renderTomatoes($('pomodoro-tomatoes'), count, cfg.longbreakInterval);\\n                    return null;\\n                })\\n                .catch(Notification.exception);\\n\\n            // Resume (only if future)\\n            const existingRaw = localStorage.getItem(K.END);\\n            if (existingRaw !== null) {\\n                const existing = Number(existingRaw);\\n                const phase = getPhase();\\n                let target;\\n                if (phase === 'wellness') {\\n                    target = $('wellness-countdown');\\n                } else if (phase === 'break') {\\n                    target = $('break-countdown');\\n                } else {\\n                    target = display;\\n                }\\n                if (Number.isFinite(existing) && existing > now() + 250) {\\n                    if (phase === 'break') {\\n                        openDialog($('break-modal'));\\n                    }\\n                    if (phase === 'wellness') {\\n                        openDialog($('wellness-modal'));\\n                    }\\n                    startTimer(existing, target || display);\\n                } else {\\n                    localStorage.removeItem(K.END);\\n                    localStorage.setItem(K.RUNNING, '0');\\n                }\\n            }\\n\\n            // Storage sync for this course key\\n            window.addEventListener('storage', (e) => {\\n                if (e.key === K.END) {\\n                    if (e.newValue !== null) {\\n                        const val = Number(e.newValue);\\n                        if (Number.isFinite(val) && val > now() + 250) {\\n                            startTimer(val, display);\\n                        } else {\\n                            localStorage.removeItem(K.END);\\n                            localStorage.setItem(K.RUNNING, '0');\\n                        }\\n                    } else {\\n                        localStorage.setItem(K.RUNNING, '0');\\n                    }\\n                    return;\\n                }\\n                if (e.key === K.MSG && e.newValue) {\\n                    try {\\n                        handleMessage(JSON.parse(e.newValue), display);\\n                    } catch (err) {\\n                        // Ignore malformed or transient values during storage sync\\n                        if (window && window.console && typeof window.console.debug === 'function') {\\n                            window.console.debug('Pomodoro: storage MSG parse ignored', err);\\n                        }\\n                    }\\n                }\\n            });\\n\\n            const startBtn = $('start');\\n            if (startBtn) {\\n                startBtn.type = 'button';\\n                startBtn.onclick = (e) => {\\n                    alarm('click');\\n                    e.preventDefault();\\n                    e.stopPropagation();\\n                    startPausePomodoro(() => startFocus(display, cfg.focusMs));\\n                };\\n            }\\n            const stopBtn = $('pause');\\n            if (stopBtn) {\\n                stopBtn.type = 'button';\\n                stopBtn.onclick = (e) => {\\n                    alarm('click');\\n                    e.preventDefault();\\n                    e.stopPropagation();\\n                    stopAndReset(display, false);\\n                };\\n            }\\n\\n            window.addEventListener('beforeunload', () => {\\n                if (channel) {\\n                    channel.close();\\n                }\\n            });\\n        }\\n    };\\n});\\n\"],\"names\":[\"define\",\"Ajax\",\"Notification\",\"cfg\",\"K\",\"channel\",\"intervalId\",\"state\",\"clearTick\",\"clearInterval\",\"alarm\",\"kind\",\"arguments\",\"length\",\"undefined\",\"soundUrl\",\"M\",\"wwwroot\",\"Audio\",\"play\",\"e\",\"window\",\"navigator\",\"vibrate\",\"$\",\"id\",\"document\",\"getElementById\",\"now\",\"Date\",\"readInt\",\"v\",\"d\",\"n\",\"parseInt\",\"Number\",\"isFinite\",\"formatTime\",\"ms\",\"s\",\"Math\",\"max\",\"floor\",\"toString\",\"padStart\",\"getTimerElement\",\"renderTomatoes\",\"el\",\"sessionscount\",\"interval\",\"m\",\"filled\",\"innerHTML\",\"Array\",\"from\",\"_\",\"i\",\"join\",\"openDialog\",\"showModal\",\"closeDialog\",\"open\",\"close\",\"startTimer\",\"endTs\",\"onDone\",\"playButton\",\"pauseButton\",\"localStorage\",\"removeItem\",\"END\",\"setItem\",\"RUNNING\",\"tick\",\"left\",\"textContent\",\"sendMessage\",\"type\",\"setInterval\",\"classList\",\"contains\",\"add\",\"remove\",\"stopAndReset\",\"focusMs\",\"startPausePomodoro\",\"onAfter\",\"display\",\"remainRaw\",\"getItem\",\"REMAINING\",\"running\",\"endRaw\",\"remain\",\"startFocus\",\"String\",\"remaining\",\"setPhase\",\"modal\",\"countdown\",\"end\",\"wellnessSec\",\"skip\",\"onclick\",\"preventDefault\",\"stopPropagation\",\"startWellness\",\"focusDur\",\"starttsSec\",\"ajax\",\"courseid\",\"startts\",\"then\",\"res\",\"count\",\"longbreakInterval\",\"isLong\",\"c\",\"dlg\",\"cd\",\"ok\",\"startBreak\",\"longbreakMs\",\"shortbreakMs\",\"catch\",\"exception\",\"p\",\"k\",\"PHASE\",\"BREAKKIND\",\"msg\",\"postMessage\",\"MSG\",\"JSON\",\"stringify\",\"Object\",\"assign\",\"t\",\"setTimeout\",\"handleMessage\",\"name\",\"args\",\"call\",\"methodname\",\"init\",\"timerDisplay\",\"getAttribute\",\"focusSec\",\"NaN\",\"focusMin\",\"split\",\"sbSec\",\"lbSec\",\"getConfig\",\"CHANNEL\",\"scoped\",\"intervalEl\",\"BroadcastChannel\",\"onmessage\",\"data\",\"existingRaw\",\"existing\",\"phase\",\"target\",\"addEventListener\",\"key\",\"newValue\",\"parse\",\"err\",\"console\",\"debug\",\"val\",\"startBtn\",\"stopBtn\"],\"mappings\":\"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\"}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/amd/build/pomodoro_timer.min.js.map b/amd/build/pomodoro_timer.min.js.map
--- a/amd/build/pomodoro_timer.min.js.map	(revision ef22ac504c4cd686e15bce178767b2c29e929ecd)
+++ b/amd/build/pomodoro_timer.min.js.map	(date 1756904845092)
@@ -1,1 +1,1 @@
-{"version":3,"file":"pomodoro_timer.min.js","sources":["../src/pomodoro_timer.js"],"sourcesContent":["/**\n * Pomodoro Timer (AMD) — scoped by course, increments only when focus ends.\n * WS: block_pomodoro_increment_session(courseid:int, startts:int [UNIX seconds])\n *     block_pomodoro_get_status(courseid:int)\n */\ndefine(['core/ajax', 'core/notification'], function(Ajax, Notification) {\n    'use strict';\n\n    // ---------------------------------------------------------------------\n    // Module-level shared mutable state (per page load)\n    // ---------------------------------------------------------------------\n    /**\n     * @typedef {Object} Config\n     * @property {number} courseid\n     * @property {number} wellnessSec\n     * @property {number} focusMs\n     * @property {number} shortbreakMs\n     * @property {number} longbreakMs\n     * @property {number} longbreakInterval\n     */\n    /** @type {null|Config} */\n    let cfg = null; // Set in init().\n    /**\n     * @typedef {Object} ScopedKeys\n     * @property {string} END End timestamp key.\n     * @property {string} REMAINING\n     * @property {string} RUNNING Running state key.\n     * @property {string} PHASE\n     * @property {string} BREAKKIND\n     * @property {string} MSG\n     * @property {string} CHANNEL\n     */\n    /** @type {null|ScopedKeys} */\n    let K = null; // Key names (scoped localStorage) set in init().\n    /** @type {null|BroadcastChannel} */\n    let channel = null; // Broadcast channel instance.\n    /** @type {null|number} */\n    let intervalId = null; // Active countdown interval id.\n\n    let state = 'stopped';\n    // ---------------------------------------------------------------------\n    // Utility helpers\n    /**\n     * Clears the active countdown interval, if any.\n     */\n    function clearTick() {\n        if (intervalId !== null) {\n            clearInterval(intervalId);\n            intervalId = null;\n        }\n    }\n\n    /**\n     * Plays an alarm sound (simple beep using Audio API).\n     * @param {string} [kind] Type of alarm sound to play ('click' or other).\n     */\n    function alarm(kind = '') {\n        try {\n            var soundUrl;\n            if (kind === 'click') {\n                soundUrl = M.cfg.wwwroot + '/blocks/pomodoro/sounds/press.mp3';\n            } else {\n                soundUrl = M.cfg.wwwroot + '/blocks/pomodoro/sounds/alert.mp3';\n            }\n            // Create an Audio object\n            var audio = new Audio(soundUrl);// Replace with actual path if needed\n            audio.play();\n        } catch (e) {\n            // Fallback: browser beep\n            if (window.navigator && window.navigator.vibrate) {\n                window.navigator.vibrate(200);\n            }\n        }\n    }\n\n    // ---------------------------------------------------------------------\n    /**\n     * Shorthand getElementById.\n     * @param {string} id\n     * @returns {HTMLElement|null}\n     */\n    function $(id) {\n        return document.getElementById(id);\n    }\n\n    /**\n     * Now in ms.\n     * @returns {number}\n     */\n    function now() {\n        return Date.now();\n    }\n\n    /**\n     * Parse an integer with default.\n     * @param {string|number|undefined|null} v\n     * @param {number} d Default value\n     * @returns {number}\n     */\n    function readInt(v, d) {\n        const n = parseInt(v ?? '', 10);\n        return Number.isFinite(n) ? n : d;\n    }\n\n    /**\n     * Format milliseconds as mm:ss.\n     * @param {number} ms\n     * @returns {string}\n     */\n    function formatTime(ms) {\n        const s = Math.max(0, Math.floor(ms / 1000));\n        const m = Math.floor(s / 60).toString().padStart(2, '0');\n        const r = (s % 60).toString().padStart(2, '0');\n        return `${m}:${r}`;\n    }\n\n    // =====================\n    // UI Functions\n    // =====================\n    /**\n     * Returns the display element for the Pomodoro timer.\n     * @returns {HTMLElement|null}\n     */\n    function getTimerElement() {\n        return $('pomodoro-timer-display');\n    }\n\n    /**\n     * Renders tomato icons for Pomodoro sessions.\n     * @param {HTMLElement} el The container element.\n     * @param {number} sessionscount Number of completed sessions.\n     * @param {number} interval Number of sessions per long break.\n     */\n    function renderTomatoes(el, sessionscount, interval) {\n        if (!el) {\n            return;\n        }\n        const n = Math.max(0, Number(sessionscount) || 0);\n        const m = Math.max(1, Number(interval) || 0);\n        const filled = ((n % m) === 0 && n !== 0) ? m : (n % m);\n        el.innerHTML = Array.from({length: m}, (_, i) =>\n            `<span class=\"tomato ${i < filled ? 'filled' : ''}\" aria-hidden=\"true\"></span>`\n        ).join('');\n    }\n\n    /**\n     * Opens the dialog element.\n     * @param {HTMLDialogElement} d The dialog element to open.\n     */\n    function openDialog(d) {\n        if (d && typeof d.showModal === 'function') {\n            d.showModal();\n        }\n    }\n\n    /**\n     * Closes the dialog element.\n     * @param {HTMLDialogElement} d The dialog element to open.\n     */\n    function closeDialog(d) {\n        if (d && d.open) {\n            d.close();\n        }\n    }\n\n    // =====================\n    // Pomodoro Logic\n    // =====================\n    /**\n     * Extracts Pomodoro configuration from the timer display element. Fallback to defaults if attributes are missing or invalid.\n     * @param {HTMLElement} timerDisplay The timer display element.\n     * @returns {Config}\n     */\n    function getConfig(timerDisplay) {\n        const courseid = readInt(timerDisplay.getAttribute('data-courseid'), 0);\n        const wellnessSec = readInt(timerDisplay.getAttribute('data-wellness-sec'), 30);\n        let focusMs;\n        const focusSec = readInt(timerDisplay.getAttribute('data-focus-sec'), NaN);\n        if (Number.isFinite(focusSec)) {\n            focusMs = focusSec * 1000;\n        } else {\n            let focusMin = readInt(timerDisplay.getAttribute('data-focus-min'), NaN);\n            if (!Number.isFinite(focusMin)) {\n                const dur = timerDisplay.getAttribute('data-duration') || '25:00';\n                const parts = dur.split(':');\n                const mm = parts[0] || '25';\n                focusMin = readInt(mm, 25);\n            }\n            focusMs = focusMin * 60 * 1000;\n        }\n        let shortbreakMs;\n        let longbreakMs;\n        const sbSec = readInt(timerDisplay.getAttribute('data-shortbreak-sec'), NaN);\n        const lbSec = readInt(timerDisplay.getAttribute('data-longbreak-sec'), NaN);\n        if (Number.isFinite(sbSec)) {\n            shortbreakMs = sbSec * 1000;\n        }\n        if (Number.isFinite(lbSec)) {\n            longbreakMs = lbSec * 1000;\n        }\n        if (!Number.isFinite(shortbreakMs)) {\n            shortbreakMs = readInt(timerDisplay.getAttribute('data-shortbreak-min'), 5) * 60 * 1000;\n        }\n        if (!Number.isFinite(longbreakMs)) {\n            longbreakMs = readInt(timerDisplay.getAttribute('data-longbreak-min'), 15) * 60 * 1000;\n        }\n        const longbreakInterval = readInt(timerDisplay.getAttribute('data-longbreak-interval'), 3);\n        return {courseid, wellnessSec, focusMs, shortbreakMs, longbreakMs, longbreakInterval};\n    }\n\n    /**\n     * Determines if the next break is a long break.\n     * @param {number} c Number of completed sessions.\n     * @param {number} i Interval for long breaks.\n     */\n    function nextIsLongBreak(c, i) {\n        return i > 0 && c > 0 && (c % i) === 0;\n    }\n\n    /**\n     * Starts the countdown timer.\n     * @param {number} endTs Timestamp (ms) when the timer ends.\n     * @param {HTMLElement} el Element to display the countdown.\n     * @param {Function} onDone Callback when timer finishes.\n     */\n    function startTimer(endTs, el, onDone) {\n        let playButton = document.getElementById('start');\n        let pauseButton = document.getElementById('pause');\n        state = 'playing';\n        if (!el || !Number.isFinite(endTs)) {\n            return;\n        }\n        if (endTs <= now()) {\n            localStorage.removeItem(K.END);\n            localStorage.setItem(K.RUNNING, '0');\n            return;\n        }\n\n        clearTick();\n        const tick = () => {\n            const left = endTs - now();\n            if (left <= 0) {\n                clearTick();\n                el.textContent = '00:00';\n                localStorage.removeItem(K.END);\n                localStorage.setItem(K.RUNNING, '0');\n                sendMessage({type: 'stop'});\n                if (onDone) {\n                    onDone();\n                }\n                return;\n            }\n            el.textContent = formatTime(left);\n        };\n        tick();\n        intervalId = setInterval(tick, 1000);\n\n        if (state === 'playing') {\n            if(!playButton.classList.contains('hidden')){\n                playButton.classList.add('hidden');\n            }\n\n            if(pauseButton.classList.contains('hidden')){\n                pauseButton.classList.remove('hidden');\n            }\n        }\n    }\n\n    /**\n     * Stop the timer and reset the display.\n     * @param {HTMLElement} el The element to update with reset time.\n     * @param {boolean} play Whether to play the alarm sound.\n     */\n    function stopAndReset(el, play = false) {\n        state = 'stopped';\n\n        let playButton = document.getElementById('start');\n        let pauseButton = document.getElementById('pause');\n\n        if (state === 'stopped') {\n            if(!pauseButton.classList.contains('hidden')){\n                pauseButton.classList.add('hidden');\n            }\n\n            if(playButton.classList.contains('hidden')){\n                playButton.classList.remove('hidden');\n            }\n        }\n    clearTick();\n        localStorage.removeItem(K.END);\n        localStorage.setItem(K.RUNNING, '0');\n        sendMessage({type: 'stop'});\n        if (el) {\n            el.textContent = formatTime(cfg.focusMs);\n        }\n        if (play) {\n            alarm();\n        }\n    }\n\n    /**\n     * Starts or pauses the Pomodoro timer.\n     * @param {Function} onAfter Callback to execute after starting wellness or focus.\n     */\n    function startPausePomodoro(onAfter) {\n        if (!cfg) {\n            return;\n        }\n        const display = getTimerElement();\n        if (!display) {\n            return;\n        }\n\n        const remainRaw = localStorage.getItem(K.REMAINING);\n        const running = localStorage.getItem(K.RUNNING) === '1';\n        const endRaw = localStorage.getItem(K.END);\n\n        // Resume\n        if (remainRaw !== null) {\n            // Continue timer from REMAINING\n            const remain = Number(remainRaw);\n            if (Number.isFinite(remain) && remain > 0) {\n                localStorage.removeItem(K.REMAINING);\n                startFocus(display, remain);\n            }\n            return;\n        }\n\n        // Start\n        if (!running) {\n            // Not running, start wellness then focus\n            startWellness(onAfter);\n            return;\n        }\n\n        // Pause\n        if (endRaw !== null) {\n            const end = Number(endRaw);\n            const left = end - now();\n            if (left > 0) {\n                localStorage.setItem(K.REMAINING, String(left));\n                sendMessage({type: 'pause', remaining: left});\n                if (display) {\n                    display.textContent = formatTime(left);\n                }\n            }\n        }\n        clearTick();\n        localStorage.setItem(K.RUNNING, '0');\n    }\n\n    /**\n     * Start the wellness countdown and call the callback after completion.\n     * @param {Function} onAfter Callback to execute after wellness period ends.\n     */\n    function startWellness(onAfter) {\n        setPhase('wellness');\n        const modal = $('wellness-modal');\n        const countdown = $('wellness-countdown');\n        if (!cfg) {\n            return;\n        }\n        if (!modal || !countdown) {\n            onAfter();\n            return;\n        }\n        const end = now() + cfg.wellnessSec * 1000;\n        openDialog(modal);\n        startTimer(end, countdown, () => {\n            closeDialog(modal);\n            onAfter();\n        });\n        const skip = $('skip-wellness');\n        if (skip) {\n            skip.type = 'button';\n            skip.onclick = (e) => {\n                alarm('click')\n                e.preventDefault();\n                e.stopPropagation();\n                closeDialog(modal);\n                onAfter();\n            };\n        }\n    }\n\n    /**\n     * Start a break timer and handle break modal UI.\n     * @param {HTMLElement} el The element to update with the break time.\n     * @param {number} ms Duration of the break in milliseconds.\n     * @param {string} kind Type of break ('short' or 'long').\n     */\n    function startBreak(el, ms, kind) {\n        setPhase('break', kind);\n        const dlg = $('break-modal');\n        const cd = $('break-countdown');\n        if (cd) {\n            cd.textContent = formatTime(ms);\n        }\n        openDialog(dlg);\n        const end = now() + ms;\n        startTimer(end, cd || el, () => {\n            alarm('focus');\n            closeDialog(dlg);\n            stopAndReset(el, false);\n        });\n        const ok = $('dismiss-break');\n        if (ok) {\n            ok.type = 'button';\n            ok.onclick = (e) => {\n                alarm('click');\n                e.preventDefault();\n                e.stopPropagation();\n                closeDialog(dlg);\n            };\n        }\n    }\n\n    /**\n     * Starts the focus timer.\n     * @param {HTMLElement} el The element to display the countdown.\n     * @param {number} ms Duration of the focus period in milliseconds.\n     */\n    function startFocus(el, ms) {\n        if (!cfg) {\n            return;\n        }\n        const focusDur = Number.isFinite(ms) && ms > 0 ? ms : 25 * 60 * 1000;\n        setPhase('focus');\n        const starttsSec = Math.floor(now() / 1000);\n        const end = now() + focusDur;\n        localStorage.setItem(K.END, String(end));\n        localStorage.setItem(K.RUNNING, '1');\n        sendMessage({type: 'start', end});\n        startTimer(end, el, () => {\n            ajax('block_pomodoro_increment_session', {courseid: cfg.courseid, startts: starttsSec})\n                .then((res) => {\n                    alarm();\n                    const count = res && typeof res.sessionscount === 'number' ? res.sessionscount : 1;\n                    renderTomatoes($('pomodoro-tomatoes'), count, cfg.longbreakInterval);\n                    const isLong = nextIsLongBreak(count, cfg.longbreakInterval);\n                    startBreak(el, isLong ? cfg.longbreakMs : cfg.shortbreakMs, isLong ? 'long' : 'short');\n                    state = 'stopped';\n                    let playButton = document.getElementById('start');\n                    let pauseButton = document.getElementById('pause');\n                    if (state === 'stopped') {\n                        if(!pauseButton.classList.contains('hidden')){\n                            pauseButton.classList.add('hidden');\n                        }\n\n                        if(playButton.classList.contains('hidden')){\n                            playButton.classList.remove('hidden');\n                        }\n                    }\n                    return null;\n                })\n                .catch(Notification.exception);\n        });\n    }\n\n    // =====================\n    // State Storage & Inter-tab Communication\n    // =====================\n    /**\n     * Returns scoped localStorage key names for a given course.\n     * @param {number} courseid The course ID to scope keys.\n     */\n    function scoped(courseid) {\n        /** @returns {ScopedKeys} */\n        const cid = Number.isFinite(courseid) && courseid > 0 ? courseid : 'global';\n        const p = `pomodoro:${cid}`;\n        return {\n            END: `${p}:endTimestamp`,\n            RUNNING: `${p}:running`,\n            PHASE: `${p}:phase`,\n            BREAKKIND: `${p}:breakKind`,\n            MSG: `${p}:msg`,\n            CHANNEL: `${p}:channel`\n        };\n    }\n\n    /**\n     * Sets the current phase and optional break kind in localStorage.\n     * @param {string} p Phase name.\n     * @param {string} [k] Optional break kind.\n     */\n    function setPhase(p, k) {\n        localStorage.setItem(K.PHASE, p);\n        if (k) {\n            localStorage.setItem(K.BREAKKIND, k);\n        } else {\n            localStorage.removeItem(K.BREAKKIND);\n        }\n    }\n\n    /**\n     * Gets the current phase from localStorage.\n     * @returns {string} The current phase name.\n     */\n    function getPhase() {\n        return localStorage.getItem(K.PHASE) || '';\n    }\n\n    /**\n     * Send a message to other tabs or via BroadcastChannel.\n     * @param {Object} msg The message object to send.\n     */\n    function sendMessage(msg) {\n        if (channel) {\n            channel.postMessage(msg);\n        } else {\n            localStorage.setItem(K.MSG, JSON.stringify(Object.assign({}, msg, {t: now()})));\n            setTimeout(function() {\n                localStorage.removeItem(K.MSG);\n            }, 50);\n        }\n    }\n\n    /**\n     * Handle incoming messages for timer synchronization.\n     * @param {Object} msg The message object.\n     * @param {HTMLElement} el The display element to update.\n     */\n    function handleMessage(msg, el) {\n        if (!msg) {\n            return;\n        }\n        if (msg.type === 'start' && msg.end) {\n            startTimer(Number(msg.end), el);\n            localStorage.setItem(K.END, String(msg.end));\n            localStorage.setItem(K.RUNNING, '1');\n            return;\n        }\n        if (msg.type === 'pause' && typeof msg.remaining !== 'undefined') {\n            clearTick();\n            localStorage.setItem(K.REMAINING, String(msg.remaining));\n            localStorage.setItem(K.RUNNING, '0');\n            if (el) {\n                el.textContent = formatTime(msg.remaining);\n            }\n            return;\n        }\n        if ((msg.type === 'stop') && localStorage.getItem(K.END)) {\n            stopAndReset(el, false);\n        }\n    }\n\n    /**\n     * Make an AJAX call using Moodle's core Ajax API.\n     * @param {string} name The web service method name.\n     * @param {Object} args Arguments for the web service call.\n     * @returns {Promise<any>} Promise resolving to the response.\n     */\n    function ajax(name, args) {\n        return Ajax.call([{methodname: name, args}])[0].catch(Notification.exception);\n    }\n\n    return {\n        init() {\n            const display = getTimerElement();\n            if (!display) {\n                return;\n            }\n            cfg = getConfig(display);\n            K = scoped(cfg.courseid);\n\n            // UI: show interval number\n            const intervalEl = $('pomodoro-interval');\n            if (intervalEl) {\n                intervalEl.textContent = String(cfg.longbreakInterval);\n            }\n\n            // Broadcast channel\n            if (typeof BroadcastChannel !== 'undefined') {\n                channel = new BroadcastChannel(K.CHANNEL);\n                channel.onmessage = (e) => handleMessage(e.data, display);\n            }\n\n            // Initial tomatoes from server\n            ajax('block_pomodoro_get_status', {courseid: cfg.courseid})\n                .then((res) => {\n                    const count = res && typeof res.sessionscount === 'number' ? res.sessionscount : 0;\n                    renderTomatoes($('pomodoro-tomatoes'), count, cfg.longbreakInterval);\n                    return null;\n                })\n                .catch(Notification.exception);\n\n            // Resume (only if future)\n            const existingRaw = localStorage.getItem(K.END);\n            if (existingRaw !== null) {\n                const existing = Number(existingRaw);\n                const phase = getPhase();\n                let target;\n                if (phase === 'wellness') {\n                    target = $('wellness-countdown');\n                } else if (phase === 'break') {\n                    target = $('break-countdown');\n                } else {\n                    target = display;\n                }\n                if (Number.isFinite(existing) && existing > now() + 250) {\n                    if (phase === 'break') {\n                        openDialog($('break-modal'));\n                    }\n                    if (phase === 'wellness') {\n                        openDialog($('wellness-modal'));\n                    }\n                    startTimer(existing, target || display);\n                } else {\n                    localStorage.removeItem(K.END);\n                    localStorage.setItem(K.RUNNING, '0');\n                }\n            }\n\n            // Storage sync for this course key\n            window.addEventListener('storage', (e) => {\n                if (e.key === K.END) {\n                    if (e.newValue !== null) {\n                        const val = Number(e.newValue);\n                        if (Number.isFinite(val) && val > now() + 250) {\n                            startTimer(val, display);\n                        } else {\n                            localStorage.removeItem(K.END);\n                            localStorage.setItem(K.RUNNING, '0');\n                        }\n                    } else {\n                        localStorage.setItem(K.RUNNING, '0');\n                    }\n                    return;\n                }\n                if (e.key === K.MSG && e.newValue) {\n                    try {\n                        handleMessage(JSON.parse(e.newValue), display);\n                    } catch (err) {\n                        // Ignore malformed or transient values during storage sync\n                        if (window && window.console && typeof window.console.debug === 'function') {\n                            window.console.debug('Pomodoro: storage MSG parse ignored', err);\n                        }\n                    }\n                }\n            });\n\n            const startBtn = $('start');\n            if (startBtn) {\n                startBtn.type = 'button';\n                startBtn.onclick = (e) => {\n                    alarm('click');\n                    e.preventDefault();\n                    e.stopPropagation();\n                    startPausePomodoro(() => startFocus(display, cfg.focusMs));\n                };\n            }\n            const stopBtn = $('pause');\n            if (stopBtn) {\n                stopBtn.type = 'button';\n                stopBtn.onclick = (e) => {\n                    alarm('click');\n                    e.preventDefault();\n                    e.stopPropagation();\n                    stopAndReset(display, false);\n                };\n            }\n\n            window.addEventListener('beforeunload', () => {\n                if (channel) {\n                    channel.close();\n                }\n            });\n        }\n    };\n});\n"],"names":["define","Ajax","Notification","cfg","K","channel","intervalId","state","clearTick","clearInterval","alarm","kind","arguments","length","undefined","soundUrl","M","wwwroot","Audio","play","e","window","navigator","vibrate","$","id","document","getElementById","now","Date","readInt","v","d","n","parseInt","Number","isFinite","formatTime","ms","s","Math","max","floor","toString","padStart","getTimerElement","renderTomatoes","el","sessionscount","interval","m","filled","innerHTML","Array","from","_","i","join","openDialog","showModal","closeDialog","open","close","startTimer","endTs","onDone","playButton","pauseButton","localStorage","removeItem","END","setItem","RUNNING","tick","left","textContent","sendMessage","type","setInterval","classList","contains","add","remove","stopAndReset","focusMs","startPausePomodoro","onAfter","display","remainRaw","getItem","REMAINING","running","endRaw","remain","startFocus","String","remaining","setPhase","modal","countdown","end","wellnessSec","skip","onclick","preventDefault","stopPropagation","startWellness","focusDur","starttsSec","ajax","courseid","startts","then","res","count","longbreakInterval","isLong","c","dlg","cd","ok","startBreak","longbreakMs","shortbreakMs","catch","exception","p","k","PHASE","BREAKKIND","msg","postMessage","MSG","JSON","stringify","Object","assign","t","setTimeout","handleMessage","name","args","call","methodname","init","timerDisplay","getAttribute","focusSec","NaN","focusMin","split","sbSec","lbSec","getConfig","CHANNEL","scoped","intervalEl","BroadcastChannel","onmessage","data","existingRaw","existing","phase","target","addEventListener","key","newValue","parse","err","console","debug","val","startBtn","stopBtn"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"pomodoro_timer.min.js","sources":["../src/pomodoro_timer.js"],"sourcesContent":["/**\n * Pomodoro Timer (AMD) — scoped by course, increments only when focus ends.\n * WS: block_pomodoro_increment_session(courseid:int, startts:int [UNIX seconds])\n *     block_pomodoro_get_status(courseid:int)\n */\ndefine(['core/ajax', 'core/notification'], function(Ajax, Notification) {\n    'use strict';\n\n    // ---------------------------------------------------------------------\n    // Module-level shared mutable state (per page load)\n    // ---------------------------------------------------------------------\n    /**\n     * @typedef {Object} Config\n     * @property {number} courseid\n     * @property {number} wellnessSec\n     * @property {number} focusMs\n     * @property {number} shortbreakMs\n     * @property {number} longbreakMs\n     * @property {number} longbreakInterval\n     */\n    /** @type {null|Config} */\n    let cfg = null; // Set in init().\n    /**\n     * @typedef {Object} ScopedKeys\n     * @property {string} END End timestamp key.\n     * @property {string} REMAINING\n     * @property {string} RUNNING Running state key.\n     * @property {string} PHASE\n     * @property {string} BREAKKIND\n     * @property {string} MSG\n     * @property {string} CHANNEL\n     */\n    /** @type {null|ScopedKeys} */\n    let K = null; // Key names (scoped localStorage) set in init().\n    /** @type {null|BroadcastChannel} */\n    let channel = null; // Broadcast channel instance.\n    /** @type {null|number} */\n    let intervalId = null; // Active countdown interval id.\n\n    let state = 'stopped';\n    // ---------------------------------------------------------------------\n    // Utility helpers\n    /**\n     * Clears the active countdown interval, if any.\n     */\n    function clearTick() {\n        if (intervalId !== null) {\n            clearInterval(intervalId);\n            intervalId = null;\n        }\n    }\n\n    /**\n     * Plays an alarm sound (simple beep using Audio API).\n     * @param {string} [kind] Type of alarm sound to play ('click' or other).\n     */\n    function alarm(kind = '') {\n        try {\n            var soundUrl;\n            if (kind === 'click') {\n                soundUrl = M.cfg.wwwroot + '/blocks/pomodoro/sounds/press.mp3';\n            } else {\n                soundUrl = M.cfg.wwwroot + '/blocks/pomodoro/sounds/alert.mp3';\n            }\n            // Create an Audio object\n            var audio = new Audio(soundUrl);// Replace with actual path if needed\n            audio.play();\n        } catch (e) {\n            // Fallback: browser beep\n            if (window.navigator && window.navigator.vibrate) {\n                window.navigator.vibrate(200);\n            }\n        }\n    }\n\n    // ---------------------------------------------------------------------\n    /**\n     * Shorthand getElementById.\n     * @param {string} id\n     * @returns {HTMLElement|null}\n     */\n    function $(id) {\n        return document.getElementById(id);\n    }\n\n    /**\n     * Now in ms.\n     * @returns {number}\n     */\n    function now() {\n        return Date.now();\n    }\n\n    /**\n     * Parse an integer with default.\n     * @param {string|number|undefined|null} v\n     * @param {number} d Default value\n     * @returns {number}\n     */\n    function readInt(v, d) {\n        const n = parseInt(v ?? '', 10);\n        return Number.isFinite(n) ? n : d;\n    }\n\n    /**\n     * Format milliseconds as mm:ss.\n     * @param {number} ms\n     * @returns {string}\n     */\n    function formatTime(ms) {\n        const s = Math.max(0, Math.floor(ms / 1000));\n        const m = Math.floor(s / 60).toString().padStart(2, '0');\n        const r = (s % 60).toString().padStart(2, '0');\n        return `${m}:${r}`;\n    }\n\n    // =====================\n    // UI Functions\n    // =====================\n    /**\n     * Returns the display element for the Pomodoro timer.\n     * @returns {HTMLElement|null}\n     */\n    function getTimerElement() {\n        return $('pomodoro-timer-display');\n    }\n\n    /**\n     * Renders tomato icons for Pomodoro sessions.\n     * @param {HTMLElement} el The container element.\n     * @param {number} sessionscount Number of completed sessions.\n     * @param {number} interval Number of sessions per long break.\n     */\n    function renderTomatoes(el, sessionscount, interval) {\n        const tomato = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"25\" height=\"25\" \\n' +\n            '                style=\"vertical-align:middle; margin-right:6px;\">\\n' +\n            '                <polygon style=\"fill:#AB2300;\" points=\"512,155.826 478.609,155.826 ...\"/>\\n' +\n            '               <polygon style=\"fill:#AB2300;\" points=\"512,155.826 478.609,155.826 478.609,100.174 445.217,100.174 445.217,66.783 \\n' +\n            '                    411.826,66.783 411.826,33.391 300.522,33.391 300.522,66.783 267.13,66.783 267.13,0 233.739,0 233.739,66.783 211.478,66.783 \\n' +\n            '                    211.478,33.391 100.174,33.391 100.174,66.783 66.783,66.783 66.783,100.174 33.391,100.174 33.391,155.826 0,155.826 0,345.043 \\n' +\n            '                    33.391,345.043 33.391,411.826 66.783,411.826 66.783,445.217 100.174,445.217 100.174,478.609 166.957,478.609 166.957,512 \\n' +\n            '                    345.043,512 345.043,478.609 411.826,478.609 411.826,445.217 445.217,445.217 445.217,411.826 478.609,411.826 478.609,345.043 \\n' +\n            '                    512,345.043 \"/>\\n' +\n            '                <polygon style=\"fill:#4E901E;\" points=\"445.217,100.174 445.217,66.783 411.826,66.783 411.826,33.391 300.522,33.391 \\n' +\n            '                    300.522,66.783 289.391,66.783 267.13,66.783 267.13,0 233.739,0 233.739,66.783 222.609,66.783 211.478,66.783 211.478,33.391 \\n' +\n            '                    100.174,33.391 100.174,66.783 66.783,66.783 66.783,100.174 33.391,100.174 33.391,155.826 66.783,155.826 133.565,155.826 \\n' +\n            '                    133.565,222.609 222.609,222.609 222.609,189.217 289.391,189.217 289.391,222.609 378.435,222.609 378.435,155.826 \\n' +\n            '                    445.217,155.826 478.609,155.826 478.609,100.174 \"/>\\n' +\n            '                <polygon points=\"233.739,100.174 233.739,122.435 267.13,122.435 267.13,100.174 300.522,100.174 300.522,66.783 267.13,66.783 \\n' +\n            '                    267.13,0 233.739,0 233.739,66.783 211.478,66.783 211.478,100.174 \"/>\\n' +\n            '                <rect x=\"222.609\" y=\"155.826\" width=\"66.783\" height=\"33.391\"/>\\n' +\n            '                <polygon points=\"378.435,122.435 345.043,122.435 345.043,155.826 345.043,189.217 289.391,189.217 289.391,222.609 \\n' +\n            '                    345.043,222.609 378.435,222.609 378.435,189.217 378.435,155.826 445.217,155.826 478.609,155.826 478.609,122.435 \\n' +\n            '                    478.609,100.174 445.217,100.174 445.217,122.435 \"/>\\n' +\n            '                <rect x=\"411.826\" y=\"66.783\" width=\"33.391\" height=\"33.391\"/>\\n' +\n            '                <rect x=\"300.522\" y=\"33.391\" width=\"111.304\" height=\"33.391\"/>\\n' +\n            '                <rect x=\"100.174\" y=\"33.391\" width=\"111.304\" height=\"33.391\"/>\\n' +\n            '                <rect x=\"66.783\" y=\"66.783\" width=\"33.391\" height=\"33.391\"/>\\n' +\n            '                <polygon points=\"133.565,155.826 133.565,189.217 133.565,222.609 166.957,222.609 222.609,222.609 222.609,189.217 \\n' +\n            '                    166.957,189.217 166.957,155.826 166.957,122.435 133.565,122.435 66.783,122.435 66.783,100.174 33.391,100.174 33.391,122.435 \\n' +\n            '                    33.391,155.826 66.783,155.826 \"/>\\n' +\n            '                <rect x=\"33.391\" y=\"345.043\" width=\"33.391\" height=\"66.783\"/>\\n' +\n            '                <rect x=\"66.783\" y=\"411.826\" width=\"33.391\" height=\"33.391\"/>\\n' +\n            '                <rect x=\"100.174\" y=\"445.217\" width=\"66.783\" height=\"33.391\"/>\\n' +\n            '                <rect x=\"166.957\" y=\"478.609\" width=\"178.087\" height=\"33.391\"/>\\n' +\n            '                <rect x=\"345.043\" y=\"445.217\" width=\"66.783\" height=\"33.391\"/>\\n' +\n            '                <rect x=\"411.826\" y=\"411.826\" width=\"33.391\" height=\"33.391\"/>\\n' +\n            '                <rect x=\"445.217\" y=\"345.043\" width=\"33.391\" height=\"66.783\"/>\\n' +\n            '                <rect x=\"478.609\" y=\"155.826\" width=\"33.391\" height=\"189.217\"/>\\n' +\n            '                <rect y=\"155.826\" width=\"33.391\" height=\"189.217\"/>\\n' +\n            '                <g>\\n' +\n            '                    <rect x=\"66.783\" y=\"189.217\" style=\"fill:#FFFFFF;\" width=\"33.391\" height=\"55.652\"/>\\n' +\n            '                    <rect x=\"66.783\" y=\"278.261\" style=\"fill:#FFFFFF;\" width=\"33.391\" height=\"33.391\"/>\\n' +\n            '                </g>\\n' +\n            '            </svg>';\n        if (!el) {\n            return;\n        }\n        const n = Math.max(0, Number(sessionscount) || 0);\n        const m = Math.max(1, Number(interval) || 0);\n        const filled = ((n % m) === 0 && n !== 0) ? m : (n % m);\n        el.innerHTML = Array.from({length: m}, (_, i) =>\n            i < filled ? tomato : '<span class=\"tomato\" aria-hidden=\"true\"></span>'\n        ).join('');\n    }\n\n    /**\n     * Opens the dialog element.\n     * @param {HTMLDialogElement} d The dialog element to open.\n     */\n    function openDialog(d) {\n        if (d && typeof d.showModal === 'function') {\n            d.showModal();\n        }\n    }\n\n    /**\n     * Closes the dialog element.\n     * @param {HTMLDialogElement} d The dialog element to open.\n     */\n    function closeDialog(d) {\n        if (d && d.open) {\n            d.close();\n        }\n    }\n\n    // =====================\n    // Pomodoro Logic\n    // =====================\n    /**\n     * Extracts Pomodoro configuration from the timer display element. Fallback to defaults if attributes are missing or invalid.\n     * @param {HTMLElement} timerDisplay The timer display element.\n     * @returns {Config}\n     */\n    function getConfig(timerDisplay) {\n        const courseid = readInt(timerDisplay.getAttribute('data-courseid'), 0);\n        const wellnessSec = readInt(timerDisplay.getAttribute('data-wellness-sec'), 30);\n        let focusMs;\n        const focusSec = readInt(timerDisplay.getAttribute('data-focus-sec'), NaN);\n        if (Number.isFinite(focusSec)) {\n            focusMs = focusSec * 1000;\n        } else {\n            let focusMin = readInt(timerDisplay.getAttribute('data-focus-min'), NaN);\n            if (!Number.isFinite(focusMin)) {\n                const dur = timerDisplay.getAttribute('data-duration') || '25:00';\n                const parts = dur.split(':');\n                const mm = parts[0] || '25';\n                focusMin = readInt(mm, 25);\n            }\n            focusMs = focusMin * 60 * 1000;\n        }\n        let shortbreakMs;\n        let longbreakMs;\n        const sbSec = readInt(timerDisplay.getAttribute('data-shortbreak-sec'), NaN);\n        const lbSec = readInt(timerDisplay.getAttribute('data-longbreak-sec'), NaN);\n        if (Number.isFinite(sbSec)) {\n            shortbreakMs = sbSec * 1000;\n        }\n        if (Number.isFinite(lbSec)) {\n            longbreakMs = lbSec * 1000;\n        }\n        if (!Number.isFinite(shortbreakMs)) {\n            shortbreakMs = readInt(timerDisplay.getAttribute('data-shortbreak-min'), 5) * 60 * 1000;\n        }\n        if (!Number.isFinite(longbreakMs)) {\n            longbreakMs = readInt(timerDisplay.getAttribute('data-longbreak-min'), 15) * 60 * 1000;\n        }\n        const longbreakInterval = readInt(timerDisplay.getAttribute('data-longbreak-interval'), 3);\n        return {courseid, wellnessSec, focusMs, shortbreakMs, longbreakMs, longbreakInterval};\n    }\n\n    /**\n     * Determines if the next break is a long break.\n     * @param {number} c Number of completed sessions.\n     * @param {number} i Interval for long breaks.\n     */\n    function nextIsLongBreak(c, i) {\n        return i > 0 && c > 0 && (c % i) === 0;\n    }\n\n    /**\n     * Starts the countdown timer.\n     * @param {number} endTs Timestamp (ms) when the timer ends.\n     * @param {HTMLElement} el Element to display the countdown.\n     * @param {Function} onDone Callback when timer finishes.\n     */\n    function startTimer(endTs, el, onDone) {\n        let playButton = document.getElementById('start');\n        let pauseButton = document.getElementById('pause');\n        state = 'playing';\n        if (!el || !Number.isFinite(endTs)) {\n            return;\n        }\n        if (endTs <= now()) {\n            localStorage.removeItem(K.END);\n            localStorage.setItem(K.RUNNING, '0');\n            return;\n        }\n\n        clearTick();\n        const tick = () => {\n            const left = endTs - now();\n            if (left <= 0) {\n                clearTick();\n                el.textContent = '00:00';\n                localStorage.removeItem(K.END);\n                localStorage.setItem(K.RUNNING, '0');\n                sendMessage({type: 'stop'});\n                if (onDone) {\n                    onDone();\n                }\n                return;\n            }\n            el.textContent = formatTime(left);\n        };\n        tick();\n        intervalId = setInterval(tick, 1000);\n\n        if (state === 'playing') {\n            if(!playButton.classList.contains('hidden')){\n                playButton.classList.add('hidden');\n            }\n\n            if(pauseButton.classList.contains('hidden')){\n                pauseButton.classList.remove('hidden');\n            }\n        }\n    }\n\n    /**\n     * Stop the timer and reset the display.\n     * @param {HTMLElement} el The element to update with reset time.\n     * @param {boolean} play Whether to play the alarm sound.\n     */\n    function stopAndReset(el, play = false) {\n        state = 'stopped';\n\n        let playButton = document.getElementById('start');\n        let pauseButton = document.getElementById('pause');\n\n        if (state === 'stopped') {\n            if(!pauseButton.classList.contains('hidden')){\n                pauseButton.classList.add('hidden');\n            }\n\n            if(playButton.classList.contains('hidden')){\n                playButton.classList.remove('hidden');\n            }\n        }\n    clearTick();\n        localStorage.removeItem(K.END);\n        localStorage.setItem(K.RUNNING, '0');\n        sendMessage({type: 'stop'});\n        if (el) {\n            el.textContent = formatTime(cfg.focusMs);\n        }\n        if (play) {\n            alarm();\n        }\n    }\n\n    /**\n     * Starts or pauses the Pomodoro timer.\n     * @param {Function} onAfter Callback to execute after starting wellness or focus.\n     */\n    function startPausePomodoro(onAfter) {\n        if (!cfg) {\n            return;\n        }\n        const display = getTimerElement();\n        if (!display) {\n            return;\n        }\n\n        const remainRaw = localStorage.getItem(K.REMAINING);\n        const running = localStorage.getItem(K.RUNNING) === '1';\n        const endRaw = localStorage.getItem(K.END);\n\n        // Resume\n        if (remainRaw !== null) {\n            // Continue timer from REMAINING\n            const remain = Number(remainRaw);\n            if (Number.isFinite(remain) && remain > 0) {\n                localStorage.removeItem(K.REMAINING);\n                startFocus(display, remain);\n            }\n            return;\n        }\n\n        // Start\n        if (!running) {\n            // Not running, start wellness then focus\n            startWellness(onAfter);\n            return;\n        }\n\n        // Pause\n        if (endRaw !== null) {\n            const end = Number(endRaw);\n            const left = end - now();\n            if (left > 0) {\n                localStorage.setItem(K.REMAINING, String(left));\n                sendMessage({type: 'pause', remaining: left});\n                if (display) {\n                    display.textContent = formatTime(left);\n                }\n            }\n        }\n        clearTick();\n        localStorage.setItem(K.RUNNING, '0');\n    }\n\n    /**\n     * Start the wellness countdown and call the callback after completion.\n     * @param {Function} onAfter Callback to execute after wellness period ends.\n     */\n    function startWellness(onAfter) {\n        setPhase('wellness');\n        const modal = $('wellness-modal');\n        const countdown = $('wellness-countdown');\n        if (!cfg) {\n            return;\n        }\n        if (!modal || !countdown) {\n            onAfter();\n            return;\n        }\n        const end = now() + cfg.wellnessSec * 1000;\n        openDialog(modal);\n        startTimer(end, countdown, () => {\n            closeDialog(modal);\n            onAfter();\n        });\n        const skip = $('skip-wellness');\n        if (skip) {\n            skip.type = 'button';\n            skip.onclick = (e) => {\n                alarm('click')\n                e.preventDefault();\n                e.stopPropagation();\n                closeDialog(modal);\n                onAfter();\n            };\n        }\n    }\n\n    /**\n     * Start a break timer and handle break modal UI.\n     * @param {HTMLElement} el The element to update with the break time.\n     * @param {number} ms Duration of the break in milliseconds.\n     * @param {string} kind Type of break ('short' or 'long').\n     */\n    function startBreak(el, ms, kind) {\n        setPhase('break', kind);\n        const dlg = $('break-modal');\n        const cd = $('break-countdown');\n        if (cd) {\n            cd.textContent = formatTime(ms);\n        }\n        openDialog(dlg);\n        const end = now() + ms;\n        startTimer(end, cd || el, () => {\n            alarm('focus');\n            closeDialog(dlg);\n            stopAndReset(el, false);\n        });\n        const ok = $('dismiss-break');\n        if (ok) {\n            ok.type = 'button';\n            ok.onclick = (e) => {\n                alarm('click');\n                e.preventDefault();\n                e.stopPropagation();\n                closeDialog(dlg);\n            };\n        }\n    }\n\n    /**\n     * Starts the focus timer.\n     * @param {HTMLElement} el The element to display the countdown.\n     * @param {number} ms Duration of the focus period in milliseconds.\n     */\n    function startFocus(el, ms) {\n        if (!cfg) {\n            return;\n        }\n        const focusDur = Number.isFinite(ms) && ms > 0 ? ms : 25 * 60 * 1000;\n        setPhase('focus');\n        const starttsSec = Math.floor(now() / 1000);\n        const end = now() + focusDur;\n        localStorage.setItem(K.END, String(end));\n        localStorage.setItem(K.RUNNING, '1');\n        sendMessage({type: 'start', end});\n        startTimer(end, el, () => {\n            ajax('block_pomodoro_increment_session', {courseid: cfg.courseid, startts: starttsSec})\n                .then((res) => {\n                    alarm();\n                    const count = res && typeof res.sessionscount === 'number' ? res.sessionscount : 1;\n                    renderTomatoes($('pomodoro-tomatoes'), count, cfg.longbreakInterval);\n                    const isLong = nextIsLongBreak(count, cfg.longbreakInterval);\n                    startBreak(el, isLong ? cfg.longbreakMs : cfg.shortbreakMs, isLong ? 'long' : 'short');\n                    state = 'stopped';\n                    let playButton = document.getElementById('start');\n                    let pauseButton = document.getElementById('pause');\n                    if (state === 'stopped') {\n                        if(!pauseButton.classList.contains('hidden')){\n                            pauseButton.classList.add('hidden');\n                        }\n\n                        if(playButton.classList.contains('hidden')){\n                            playButton.classList.remove('hidden');\n                        }\n                    }\n                    return null;\n                })\n                .catch(Notification.exception);\n        });\n    }\n\n    // =====================\n    // State Storage & Inter-tab Communication\n    // =====================\n    /**\n     * Returns scoped localStorage key names for a given course.\n     * @param {number} courseid The course ID to scope keys.\n     */\n    function scoped(courseid) {\n        /** @returns {ScopedKeys} */\n        const cid = Number.isFinite(courseid) && courseid > 0 ? courseid : 'global';\n        const p = `pomodoro:${cid}`;\n        return {\n            END: `${p}:endTimestamp`,\n            RUNNING: `${p}:running`,\n            PHASE: `${p}:phase`,\n            BREAKKIND: `${p}:breakKind`,\n            MSG: `${p}:msg`,\n            CHANNEL: `${p}:channel`\n        };\n    }\n\n    /**\n     * Sets the current phase and optional break kind in localStorage.\n     * @param {string} p Phase name.\n     * @param {string} [k] Optional break kind.\n     */\n    function setPhase(p, k) {\n        localStorage.setItem(K.PHASE, p);\n        if (k) {\n            localStorage.setItem(K.BREAKKIND, k);\n        } else {\n            localStorage.removeItem(K.BREAKKIND);\n        }\n    }\n\n    /**\n     * Gets the current phase from localStorage.\n     * @returns {string} The current phase name.\n     */\n    function getPhase() {\n        return localStorage.getItem(K.PHASE) || '';\n    }\n\n    /**\n     * Send a message to other tabs or via BroadcastChannel.\n     * @param {Object} msg The message object to send.\n     */\n    function sendMessage(msg) {\n        if (channel) {\n            channel.postMessage(msg);\n        } else {\n            localStorage.setItem(K.MSG, JSON.stringify(Object.assign({}, msg, {t: now()})));\n            setTimeout(function() {\n                localStorage.removeItem(K.MSG);\n            }, 50);\n        }\n    }\n\n    /**\n     * Handle incoming messages for timer synchronization.\n     * @param {Object} msg The message object.\n     * @param {HTMLElement} el The display element to update.\n     */\n    function handleMessage(msg, el) {\n        if (!msg) {\n            return;\n        }\n        if (msg.type === 'start' && msg.end) {\n            startTimer(Number(msg.end), el);\n            localStorage.setItem(K.END, String(msg.end));\n            localStorage.setItem(K.RUNNING, '1');\n            return;\n        }\n        if (msg.type === 'pause' && typeof msg.remaining !== 'undefined') {\n            clearTick();\n            localStorage.setItem(K.REMAINING, String(msg.remaining));\n            localStorage.setItem(K.RUNNING, '0');\n            if (el) {\n                el.textContent = formatTime(msg.remaining);\n            }\n            return;\n        }\n        if ((msg.type === 'stop') && localStorage.getItem(K.END)) {\n            stopAndReset(el, false);\n        }\n    }\n\n    /**\n     * Make an AJAX call using Moodle's core Ajax API.\n     * @param {string} name The web service method name.\n     * @param {Object} args Arguments for the web service call.\n     * @returns {Promise<any>} Promise resolving to the response.\n     */\n    function ajax(name, args) {\n        return Ajax.call([{methodname: name, args}])[0].catch(Notification.exception);\n    }\n\n    return {\n        init() {\n            const display = getTimerElement();\n            if (!display) {\n                return;\n            }\n            cfg = getConfig(display);\n            K = scoped(cfg.courseid);\n\n            // UI: show interval number\n            const intervalEl = $('pomodoro-interval');\n            if (intervalEl) {\n                intervalEl.textContent = String(cfg.longbreakInterval);\n            }\n\n            // Broadcast channel\n            if (typeof BroadcastChannel !== 'undefined') {\n                channel = new BroadcastChannel(K.CHANNEL);\n                channel.onmessage = (e) => handleMessage(e.data, display);\n            }\n\n            // Initial tomatoes from server\n            ajax('block_pomodoro_get_status', {courseid: cfg.courseid})\n                .then((res) => {\n                    const count = res && typeof res.sessionscount === 'number' ? res.sessionscount : 0;\n                    renderTomatoes($('pomodoro-tomatoes'), count, cfg.longbreakInterval);\n                    return null;\n                })\n                .catch(Notification.exception);\n\n            // Resume (only if future)\n            const existingRaw = localStorage.getItem(K.END);\n            if (existingRaw !== null) {\n                const existing = Number(existingRaw);\n                const phase = getPhase();\n                let target;\n                if (phase === 'wellness') {\n                    target = $('wellness-countdown');\n                } else if (phase === 'break') {\n                    target = $('break-countdown');\n                } else {\n                    target = display;\n                }\n                if (Number.isFinite(existing) && existing > now() + 250) {\n                    if (phase === 'break') {\n                        openDialog($('break-modal'));\n                    }\n                    if (phase === 'wellness') {\n                        openDialog($('wellness-modal'));\n                    }\n                    startTimer(existing, target || display);\n                } else {\n                    localStorage.removeItem(K.END);\n                    localStorage.setItem(K.RUNNING, '0');\n                }\n            }\n\n            // Storage sync for this course key\n            window.addEventListener('storage', (e) => {\n                if (e.key === K.END) {\n                    if (e.newValue !== null) {\n                        const val = Number(e.newValue);\n                        if (Number.isFinite(val) && val > now() + 250) {\n                            startTimer(val, display);\n                        } else {\n                            localStorage.removeItem(K.END);\n                            localStorage.setItem(K.RUNNING, '0');\n                        }\n                    } else {\n                        localStorage.setItem(K.RUNNING, '0');\n                    }\n                    return;\n                }\n                if (e.key === K.MSG && e.newValue) {\n                    try {\n                        handleMessage(JSON.parse(e.newValue), display);\n                    } catch (err) {\n                        // Ignore malformed or transient values during storage sync\n                        if (window && window.console && typeof window.console.debug === 'function') {\n                            window.console.debug('Pomodoro: storage MSG parse ignored', err);\n                        }\n                    }\n                }\n            });\n\n            const startBtn = $('start');\n            if (startBtn) {\n                startBtn.type = 'button';\n                startBtn.onclick = (e) => {\n                    alarm('click');\n                    e.preventDefault();\n                    e.stopPropagation();\n                    startPausePomodoro(() => startFocus(display, cfg.focusMs));\n                };\n            }\n            const stopBtn = $('pause');\n            if (stopBtn) {\n                stopBtn.type = 'button';\n                stopBtn.onclick = (e) => {\n                    alarm('click');\n                    e.preventDefault();\n                    e.stopPropagation();\n                    stopAndReset(display, false);\n                };\n            }\n\n            window.addEventListener('beforeunload', () => {\n                if (channel) {\n                    channel.close();\n                }\n            });\n        }\n    };\n});\n"],"names":["define","Ajax","Notification","cfg","K","channel","intervalId","state","clearTick","clearInterval","alarm","kind","arguments","length","undefined","soundUrl","M","wwwroot","Audio","play","e","window","navigator","vibrate","$","id","document","getElementById","now","Date","readInt","v","d","n","parseInt","Number","isFinite","formatTime","ms","s","Math","max","floor","toString","padStart","getTimerElement","renderTomatoes","el","sessionscount","interval","m","filled","innerHTML","Array","from","_","i","join","openDialog","showModal","closeDialog","open","close","startTimer","endTs","onDone","playButton","pauseButton","localStorage","removeItem","END","setItem","RUNNING","tick","left","textContent","sendMessage","type","setInterval","classList","contains","add","remove","stopAndReset","focusMs","startPausePomodoro","onAfter","display","remainRaw","getItem","REMAINING","running","endRaw","remain","startFocus","String","remaining","setPhase","modal","countdown","end","wellnessSec","skip","onclick","preventDefault","stopPropagation","startWellness","focusDur","starttsSec","ajax","courseid","startts","then","res","count","longbreakInterval","isLong","c","dlg","cd","ok","startBreak","longbreakMs","shortbreakMs","catch","exception","p","k","PHASE","BREAKKIND","msg","postMessage","MSG","JSON","stringify","Object","assign","t","setTimeout","handleMessage","name","args","call","methodname","init","timerDisplay","getAttribute","focusSec","NaN","focusMin","split","sbSec","lbSec","getConfig","CHANNEL","scoped","intervalEl","BroadcastChannel","onmessage","data","existingRaw","existing","phase","target","addEventListener","key","newValue","parse","err","console","debug","val","startBtn","stopBtn"],"mappings":"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"}
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"ba8b018e-c5d2-4fc6-bd88-b8871d5c2560\" name=\"Changes\" comment=\"Change mustache file\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/amd/build/pomodoro_timer.min.js\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/amd/build/pomodoro_timer.min.js\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/amd/build/pomodoro_timer.min.js.map\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/amd/build/pomodoro_timer.min.js.map\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/amd/src/pomodoro_timer.js\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/amd/src/pomodoro_timer.js\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"ComposerSettings\">\n    <execution />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;alissacenga&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;url&quot;: &quot;https://github.com/ankreppenhofer/block_pomodoro.git&quot;,\n    &quot;accountId&quot;: &quot;a9b133dc-813b-425a-b79e-0bd02e2d5509&quot;\n  }\n}</component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 1\n}</component>\n  <component name=\"ProjectId\" id=\"328hxDVmaaTt0L7KlXMPXKTRTtn\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;timer-redesign&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"\\\\wsl.localhost\\Ubuntu-22.04\\home\\alissacenga\\tuwien\\projects\\moodle-versions\\moodle500_mmdach\\blocks\\pomodoro\\pix\" />\n      <recent name=\"\\\\wsl.localhost\\Ubuntu-22.04\\home\\alissacenga\\tuwien\\projects\\moodle-versions\\moodle500_mmdach\\blocks\\pomodoro\\pics\" />\n    </key>\n  </component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"bundled-js-predefined-d6986cc7102b-e768b9ed790e-JavaScript-PS-243.21565.202\" />\n        <option value=\"bundled-php-predefined-a98d8de5180a-5fbe0c30323e-com.jetbrains.php.sharedIndexes-PS-243.21565.202\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"ba8b018e-c5d2-4fc6-bd88-b8871d5c2560\" name=\"Changes\" comment=\"\" />\n      <created>1756808351418</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1756808351418</updated>\n      <workItem from=\"1756808352695\" duration=\"26958000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Change mustache file\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1756817321601</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1756817321601</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Change mustache file\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1756903715909</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1756903715909</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"3\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Change mustache file\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Change mustache file\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision ef22ac504c4cd686e15bce178767b2c29e929ecd)
+++ b/.idea/workspace.xml	(date 1756905799845)
@@ -8,7 +8,6 @@
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/amd/build/pomodoro_timer.min.js" beforeDir="false" afterPath="$PROJECT_DIR$/amd/build/pomodoro_timer.min.js" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/amd/build/pomodoro_timer.min.js.map" beforeDir="false" afterPath="$PROJECT_DIR$/amd/build/pomodoro_timer.min.js.map" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/amd/src/pomodoro_timer.js" beforeDir="false" afterPath="$PROJECT_DIR$/amd/src/pomodoro_timer.js" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -21,7 +20,7 @@
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="main" />
+        <entry key="$PROJECT_DIR$" value="timer-redesign" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -50,7 +49,7 @@
   &quot;keyToString&quot;: {
     &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
     &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;timer-redesign&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
     &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
     &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
     &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
